import mongoose from 'mongoose';
import dotenv from 'dotenv';
import specialRequestModel from '../DB/models/specialRequest.model.js';

dotenv.config();

async function checkRequestTypes() {
  try {
    console.log('๐ ูุญุต ุฃููุงุน ุงูุทูุจุงุช...');
    
    // ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
    await mongoose.connect(process.env.CONNECTION_URL);
    console.log('โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช');
    
    const artistId = '6872b83044e2488629f74e8a';
    const artistObjectId = new mongoose.Types.ObjectId(artistId);
    
    console.log('๐ Artist ID:', artistId);
    
    // ูุญุต ุฌููุน ุงูุทูุจุงุช ููููุงู
    const allRequests = await specialRequestModel.find({ 
      artist: artistObjectId 
    }).lean();
    
    console.log('\n๐ ุฅุญุตุงุฆูุงุช ุงูุทูุจุงุช:');
    console.log('- ุฅุฌูุงูู ุงูุทูุจุงุช:', allRequests.length);
    
    // ุชุฌููุน ุงูุทูุจุงุช ุญุณุจ ุงูููุน
    const requestsByType = {};
    const requestsByStatus = {};
    
    allRequests.forEach(request => {
      // ุญุณุจ ุงูููุน
      const type = request.requestType || 'unknown';
      if (!requestsByType[type]) {
        requestsByType[type] = [];
      }
      requestsByType[type].push(request);
      
      // ุญุณุจ ุงูุญุงูุฉ
      const status = request.status || 'unknown';
      if (!requestsByStatus[status]) {
        requestsByStatus[status] = [];
      }
      requestsByStatus[status].push(request);
    });
    
    console.log('\n๐ ุงูุทูุจุงุช ุญุณุจ ุงูููุน:');
    Object.keys(requestsByType).forEach(type => {
      const requests = requestsByType[type];
      const completed = requests.filter(r => r.status === 'completed').length;
      const totalValue = requests
        .filter(r => r.status === 'completed')
        .reduce((sum, r) => sum + (r.finalPrice || r.budget || 0), 0);
      
      console.log(`- ${type}: ${requests.length} ุทูุจ (${completed} ููุชููุ ${totalValue} ุฑูุงู)`);
    });
    
    console.log('\n๐ ุงูุทูุจุงุช ุญุณุจ ุงูุญุงูุฉ:');
    Object.keys(requestsByStatus).forEach(status => {
      const requests = requestsByStatus[status];
      console.log(`- ${status}: ${requests.length} ุทูุจ`);
    });
    
    // ุชูุงุตูู ูู ุทูุจ
    console.log('\n๐ ุชูุงุตูู ุงูุทูุจุงุช:');
    allRequests.forEach((request, index) => {
      console.log(`${index + 1}. ${request.requestType || 'ุบูุฑ ูุญุฏุฏ'}`);
      console.log(`   ุงูุนููุงู: ${request.title || 'ุบูุฑ ูุญุฏุฏ'}`);
      console.log(`   ุงูููุฒุงููุฉ: ${request.budget} ${request.currency}`);
      console.log(`   ุงูุณุนุฑ ุงูููุงุฆู: ${request.finalPrice || 'ุบูุฑ ูุญุฏุฏ'} ${request.currency}`);
      console.log(`   ุงูุญุงูุฉ: ${request.status}`);
      console.log(`   ุงูุฃููููุฉ: ${request.priority}`);
      console.log(`   ุชุงุฑูุฎ ุงูุฅูุดุงุก: ${request.createdAt}`);
      console.log('   ---');
    });
    
    // ุญุณุงุจ ุงูุฅุญุตุงุฆูุงุช ุงูุตุญูุญุฉ
    const completedRequests = allRequests.filter(r => r.status === 'completed');
    const totalSales = completedRequests.reduce((sum, r) => sum + (r.finalPrice || r.budget || 0), 0);
    
    console.log('\n๐ฐ ุงูุฅุญุตุงุฆูุงุช ุงูุตุญูุญุฉ:');
    console.log('- ุฅุฌูุงูู ุงูุทูุจุงุช:', allRequests.length);
    console.log('- ุงูุทูุจุงุช ุงูููุชููุฉ:', completedRequests.length);
    console.log('- ุฅุฌูุงูู ุงููุจูุนุงุช:', totalSales, 'ุฑูุงู');
    
    // ูุญุต ุฌููุน ุฃููุงุน ุงูุทูุจุงุช ูู ุงููุธุงู
    console.log('\n๐ ุฌููุน ุฃููุงุน ุงูุทูุจุงุช ูู ุงููุธุงู:');
    const allRequestTypes = await specialRequestModel.distinct('requestType');
    console.log('ุฃููุงุน ุงูุทูุจุงุช ุงููุชุงุญุฉ:', allRequestTypes);
    
  } catch (error) {
    console.error('โ ุฎุทุฃ:', error.message);
  } finally {
    await mongoose.disconnect();
    console.log('๐ ุชู ูุทุน ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช');
  }
}

checkRequestTypes(); 