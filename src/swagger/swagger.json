{
  "openapi": "3.0.0",
  "info": {
    "title": "ArtHub API",
    "description": "Complete API documentation for ArtHub backend services",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api",
      "description": "Main API server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentication and user management endpoints"
    },
    {
      "name": "Artworks",
      "description": "Artwork management endpoints"
    },
    {
      "name": "Image",
      "description": "Image upload and management"
    },
    {
      "name": "Chat",
      "description": "Chat and messaging functionality"
    },
    {
      "name": "Home",
      "description": "Home page data"
    },
    {
      "name": "Special Requests",
      "description": "Special commission request management"
    },
    {
      "name": "Reports",
      "description": "Content reporting system"
    },
    {
      "name": "Transactions",
      "description": "Financial transactions and payments"
    },
    {
      "name": "Reviews",
      "description": "Artwork and artist reviews and ratings"
    },
    {
      "name": "Follow",
      "description": "Artist follow/unfollow functionality"
    },
    {
      "name": "Notifications",
      "description": "User notifications management"
    }
  ],
  "paths": {
    "/api/notifications": {
      "get": {
        "tags": ["Notifications"],
        "summary": "الحصول على إشعارات المستخدم",
        "description": "استرجاع جميع إشعارات المستخدم المسجل الدخول",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "عدد العناصر في الصفحة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب الإشعارات بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Notifications"],
        "summary": "حذف جميع الإشعارات",
        "description": "حذف جميع إشعارات المستخدم",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "تم حذف جميع الإشعارات بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "deletedCount": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/{notificationId}": {
      "delete": {
        "tags": ["Notifications"],
        "summary": "حذف إشعار",
        "description": "حذف إشعار معين",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف الإشعار"
          }
        ],
        "responses": {
          "200": {
            "description": "تم حذف الإشعار بنجاح"
          },
          "404": {
            "description": "الإشعار غير موجود"
          }
        }
      }
    },
    "/api/notifications/{notificationId}/read": {
      "patch": {
        "tags": ["Notifications"],
        "summary": "وضع علامة \"مقروء\" على إشعار",
        "description": "تعيين إشعار معين كمقروء",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف الإشعار"
          }
        ],
        "responses": {
          "200": {
            "description": "تم تحديث حالة قراءة الإشعار بنجاح"
          },
          "404": {
            "description": "الإشعار غير موجود"
          }
        }
      }
    },
    "/api/chat": {
      "get": {
        "tags": ["Chat"],
        "summary": "الحصول على محادثات المستخدم",
        "description": "استرجاع جميع محادثات المستخدم المسجل الدخول",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب المحادثات بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Chat"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/create": {
      "post": {
        "tags": ["Chat"],
        "summary": "إنشاء محادثة",
        "description": "إنشاء محادثة جديدة مع مستخدم آخر",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["userId"],
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "معرف المستخدم الآخر"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "تم إنشاء المحادثة بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Chat"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "المستخدم غير موجود"
          }
        }
      }
    },
    "/api/chat/{chatId}/messages": {
      "get": {
        "tags": ["Chat"],
        "summary": "الحصول على رسائل محادثة",
        "description": "استرجاع جميع الرسائل في محادثة معينة",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "chatId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف المحادثة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب الرسائل بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ChatMessage"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "المحادثة غير موجودة"
          }
        }
      },
      "post": {
        "tags": ["Chat"],
        "summary": "إرسال رسالة",
        "description": "إرسال رسالة جديدة في محادثة معينة",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "chatId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف المحادثة"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["text"],
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "نص الرسالة"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "تم إرسال الرسالة بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ChatMessage"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "المحادثة غير موجودة"
          }
        }
      }
    },
    "/api/chat/{chatId}/read": {
      "post": {
        "tags": ["Chat"],
        "summary": "تحديث حالة قراءة الرسائل",
        "description": "تعيين جميع الرسائل في محادثة معينة كمقروءة",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "chatId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف المحادثة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم تحديث حالة القراءة بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "modifiedCount": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "المحادثة غير موجودة"
          }
        }
      }
    },
    "/api/notifications/read-all": {
      "patch": {
        "tags": ["Notifications"],
        "summary": "وضع علامة \"مقروء\" على جميع الإشعارات",
        "description": "تعيين جميع إشعارات المستخدم كمقروءة",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "تم تحديث حالة قراءة جميع الإشعارات بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "modifiedCount": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Create a new user account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password", "confirmPassword", "job"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User email address"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "User password (min 8 chars, at least one uppercase letter and one number/special char)"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "description": "Confirm password (must match password)"
                  },
                  "job": {
                    "type": "string",
                    "description": "User job/role"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم التسجيل بنجاح!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "job": {
                          "type": "string"
                        },
                        "token": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or email already registered"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "description": "Authenticate user and get token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم تسجيل الدخول بنجاح."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "job": {
                          "type": "string"
                        },
                        "token": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/auth/login-with-fingerprint": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login with fingerprint",
        "description": "Login with device fingerprint",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/social-login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Social login with Firebase",
        "description": "Authenticate user using Firebase token from social login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idToken": {
                    "type": "string",
                    "description": "Firebase ID token"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Firebase token"
          }
        }
      }
    },
    "/auth/forgetCode": {
      "patch": {
        "tags": ["Authentication"],
        "summary": "Send password reset code",
        "description": "Send a verification code to user's email for password reset",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset code sent (if email exists)"
          },
          "500": {
            "description": "Failed to send email"
          }
        }
      }
    },
    "/auth/resetPassword": {
      "patch": {
        "tags": ["Authentication"],
        "summary": "Reset password",
        "description": "Reset user password when authenticated",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["oldPassword", "newPassword"],
                "properties": {
                  "oldPassword": {
                    "type": "string",
                    "format": "password"
                  },
                  "newPassword": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful"
          },
          "400": {
            "description": "Invalid password"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/VerifyCode": {
      "patch": {
        "tags": ["Authentication"],
        "summary": "Verify account code",
        "description": "Verify the account verification code sent to email",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["code"],
                "properties": {
                  "code": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account verified successfully"
          },
          "400": {
            "description": "Invalid verification code"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/verifyForgetCode": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Verify forget password code",
        "description": "Verify the code sent for password reset",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "code"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "code": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Code verified successfully"
          },
          "400": {
            "description": "Invalid code"
          }
        }
      }
    },
    "/auth/resetPasswordByCode": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Reset password by code",
        "description": "Reset password using the verification code",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "code", "newPassword"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "code": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful"
          },
          "400": {
            "description": "Invalid code or email"
          }
        }
      }
    },
    "/image/upload": {
      "post": {
        "tags": ["Image"],
        "summary": "Upload images",
        "description": "Upload one or more images to Cloudinary",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Images uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "urls": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Upload failed"
          }
        }
      }
    },
    "/chat": {
      "get": {
        "tags": ["Chat"],
        "summary": "Get user chats",
        "description": "Get all chats for the authenticated user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of user chats",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Chat"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/chat/{chatId}/messages": {
      "get": {
        "tags": ["Chat"],
        "summary": "Get messages in a chat",
        "description": "Get all messages in a specific chat",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "chatId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Message"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Chat not found"
          }
        }
      }
    },
    "/home": {
      "get": {
        "tags": ["Home"],
        "summary": "Get home page data",
        "description": "Get data for home page including featured artworks and categories",
        "responses": {
          "200": {
            "description": "Home page data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "featuredArtworks": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Artwork"
                          }
                        },
                        "categories": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Category"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/home/search": {
      "get": {
        "tags": ["Home"],
        "summary": "Search artworks and artists",
        "description": "Search for artworks and artists by query term",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search query"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "artworks": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Artwork"
                          }
                        },
                        "artists": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions/artwork": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Purchase artwork",
        "description": "Create a transaction to purchase an artwork",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["artworkId", "paymentMethod", "shippingAddress"],
                "properties": {
                  "artworkId": {
                    "type": "string",
                    "description": "ID of the artwork to purchase"
                  },
                  "paymentMethod": {
                    "type": "string",
                    "enum": [
                      "credit_card",
                      "debit_card",
                      "bank_transfer",
                      "paypal",
                      "stripe",
                      "other"
                    ],
                    "description": "Payment method"
                  },
                  "paymentId": {
                    "type": "string",
                    "description": "Payment ID from payment gateway (optional)"
                  },
                  "shippingAddress": {
                    "type": "object",
                    "required": ["fullName", "addressLine1", "city", "country", "phoneNumber"],
                    "properties": {
                      "fullName": {
                        "type": "string",
                        "description": "Recipient's full name"
                      },
                      "addressLine1": {
                        "type": "string",
                        "description": "Address line 1"
                      },
                      "addressLine2": {
                        "type": "string",
                        "description": "Address line 2 (optional)"
                      },
                      "city": {
                        "type": "string",
                        "description": "City"
                      },
                      "state": {
                        "type": "string",
                        "description": "State/Province (optional)"
                      },
                      "postalCode": {
                        "type": "string",
                        "description": "Postal/ZIP code (optional)"
                      },
                      "country": {
                        "type": "string",
                        "description": "Country"
                      },
                      "phoneNumber": {
                        "type": "string",
                        "description": "Contact phone number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Transaction created successfully"
          },
          "400": {
            "description": "Invalid input data"
          },
          "404": {
            "description": "Artwork not found"
          }
        }
      }
    },
    "/transactions/special-request": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Pay for special request",
        "description": "Create a transaction to pay for an accepted special request",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["specialRequestId", "paymentMethod", "shippingAddress"],
                "properties": {
                  "specialRequestId": {
                    "type": "string",
                    "description": "ID of the special request to pay for"
                  },
                  "paymentMethod": {
                    "type": "string",
                    "enum": [
                      "credit_card",
                      "debit_card",
                      "bank_transfer",
                      "paypal",
                      "stripe",
                      "other"
                    ],
                    "description": "Payment method"
                  },
                  "paymentId": {
                    "type": "string",
                    "description": "Payment ID from payment gateway (optional)"
                  },
                  "shippingAddress": {
                    "type": "object",
                    "description": "Shipping address details"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Transaction created successfully"
          },
          "400": {
            "description": "Invalid input data"
          },
          "404": {
            "description": "Special request not found"
          }
        }
      }
    },
    "/transactions/{transactionId}": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get transaction details",
        "description": "Get details of a specific transaction",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the transaction"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction details retrieved successfully"
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/{transactionId}/status": {
      "patch": {
        "tags": ["Transactions"],
        "summary": "Update transaction status",
        "description": "Update status of a transaction (admin or seller only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the transaction"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["status"],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["pending", "completed", "failed", "refunded"],
                    "description": "New transaction status"
                  },
                  "notes": {
                    "type": "string",
                    "description": "Additional notes (optional)"
                  },
                  "trackingInfo": {
                    "type": "object",
                    "description": "Tracking information (optional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaction status updated successfully"
          },
          "403": {
            "description": "Unauthorized to update this transaction"
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/{transactionId}/tracking": {
      "patch": {
        "tags": ["Transactions"],
        "summary": "Update shipping tracking",
        "description": "Update shipping and tracking information for a transaction (seller only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the transaction"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["provider", "trackingNumber"],
                "properties": {
                  "provider": {
                    "type": "string",
                    "description": "Shipping provider"
                  },
                  "trackingNumber": {
                    "type": "string",
                    "description": "Tracking number"
                  },
                  "trackingUrl": {
                    "type": "string",
                    "description": "Tracking URL (optional)"
                  },
                  "estimatedDelivery": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Estimated delivery date (optional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tracking information updated successfully"
          },
          "403": {
            "description": "Unauthorized to update this transaction"
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/buyer/history": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get purchase history",
        "description": "Get user's purchase transaction history",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Items per page"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "completed", "failed", "refunded"]
            },
            "description": "Filter by status"
          }
        ],
        "responses": {
          "200": {
            "description": "Purchase history retrieved successfully"
          }
        }
      }
    },
    "/transactions/seller/history": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get sales history",
        "description": "Get seller's sales transaction history",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Items per page"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "completed", "failed", "refunded"]
            },
            "description": "Filter by status"
          }
        ],
        "responses": {
          "200": {
            "description": "Sales history retrieved successfully"
          }
        }
      }
    },
    "/transactions/seller/stats": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get seller stats",
        "description": "Get sales statistics for seller",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Sales statistics retrieved successfully"
          },
          "403": {
            "description": "Unauthorized to view statistics"
          }
        }
      }
    },
    "/transactions/admin/stats": {
      "get": {
        "tags": ["Transactions", "Admin"],
        "summary": "Get admin transaction stats",
        "description": "Get platform-wide transaction statistics (admin only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction statistics retrieved successfully"
          },
          "403": {
            "description": "Unauthorized to view admin statistics"
          }
        }
      }
    },
    "/special-requests": {
      "post": {
        "tags": ["Special Requests"],
        "summary": "إنشاء طلب خاص",
        "description": "إرسال طلب خاص لفنان محدد",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["artist", "requestType", "description", "budget"],
                "properties": {
                  "artist": {
                    "type": "string",
                    "description": "معرف الفنان"
                  },
                  "requestType": {
                    "type": "string",
                    "description": "نوع الطلب الخاص"
                  },
                  "description": {
                    "type": "string",
                    "description": "وصف تفصيلي للطلب"
                  },
                  "budget": {
                    "type": "number",
                    "description": "الميزانية المقترحة"
                  },
                  "deadline": {
                    "type": "string",
                    "format": "date-time",
                    "description": "الموعد النهائي (اختياري)"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    },
                    "description": "روابط ملفات مرفقة (اختياري)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "تم إنشاء الطلب الخاص بنجاح"
          },
          "400": {
            "description": "بيانات غير صالحة"
          },
          "404": {
            "description": "الفنان غير موجود"
          }
        }
      }
    },
    "/special-requests/my": {
      "get": {
        "tags": ["Special Requests"],
        "summary": "عرض طلباتي الخاصة",
        "description": "عرض الطلبات الخاصة التي أرسلها المستخدم",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "عدد العناصر في الصفحة"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "accepted", "rejected", "completed"]
            },
            "description": "تصفية حسب الحالة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب طلبات المستخدم بنجاح"
          }
        }
      }
    },
    "/special-requests/artist": {
      "get": {
        "tags": ["Special Requests"],
        "summary": "عرض الطلبات الموجهة للفنان",
        "description": "عرض الطلبات الخاصة المرسلة إلى الفنان",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "عدد العناصر في الصفحة"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "accepted", "rejected", "completed"]
            },
            "description": "تصفية حسب الحالة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب طلبات الفنان بنجاح"
          },
          "403": {
            "description": "غير مصرح لك بعرض طلبات الفنانين"
          }
        }
      }
    },
    "/special-requests/artist/stats": {
      "get": {
        "tags": ["Special Requests"],
        "summary": "إحصائيات الطلبات للفنان",
        "description": "عرض إحصائيات الطلبات الخاصة للفنان",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب إحصائيات الطلبات بنجاح"
          },
          "403": {
            "description": "غير مصرح لك بعرض إحصائيات الفنانين"
          }
        }
      }
    },
    "/special-requests/{requestId}": {
      "get": {
        "tags": ["Special Requests"],
        "summary": "تفاصيل طلب خاص",
        "description": "عرض تفاصيل طلب خاص محدد",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف الطلب"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب تفاصيل الطلب بنجاح"
          },
          "404": {
            "description": "الطلب غير موجود"
          }
        }
      }
    },
    "/special-requests/{requestId}/status": {
      "patch": {
        "tags": ["Special Requests"],
        "summary": "تحديث حالة الطلب",
        "description": "تحديث حالة طلب خاص (للفنان فقط)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف الطلب"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["status"],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["accepted", "rejected"],
                    "description": "الحالة الجديدة"
                  },
                  "response": {
                    "type": "string",
                    "description": "رد الفنان على الطلب"
                  },
                  "deadline": {
                    "type": "string",
                    "format": "date-time",
                    "description": "الموعد النهائي المقترح (في حالة القبول)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تحديث حالة الطلب بنجاح"
          },
          "400": {
            "description": "بيانات غير صالحة"
          },
          "403": {
            "description": "غير مصرح لك بتحديث هذا الطلب"
          },
          "404": {
            "description": "الطلب غير موجود"
          }
        }
      }
    },
    "/special-requests/{requestId}/complete": {
      "patch": {
        "tags": ["Special Requests"],
        "summary": "إكمال طلب خاص",
        "description": "تسليم وإكمال طلب خاص (للفنان فقط)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف الطلب"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["deliverables"],
                "properties": {
                  "deliverables": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    },
                    "description": "روابط ملفات التسليم"
                  },
                  "finalNote": {
                    "type": "string",
                    "description": "ملاحظة نهائية عند التسليم"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم إكمال الطلب بنجاح"
          },
          "400": {
            "description": "بيانات غير صالحة أو الطلب ليس في حالة 'مقبول'"
          },
          "403": {
            "description": "غير مصرح لك بإكمال هذا الطلب"
          },
          "404": {
            "description": "الطلب غير موجود"
          }
        }
      }
    },
    "/reports": {
      "post": {
        "tags": ["Reports"],
        "summary": "إنشاء تقرير جديد",
        "description": "الإبلاغ عن محتوى غير مناسب",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["contentType", "contentId", "reason"],
                "properties": {
                  "contentType": {
                    "type": "string",
                    "enum": ["artwork", "image", "user", "comment", "message"],
                    "description": "نوع المحتوى المبلغ عنه"
                  },
                  "contentId": {
                    "type": "string",
                    "description": "معرف المحتوى المبلغ عنه"
                  },
                  "reason": {
                    "type": "string",
                    "enum": [
                      "inappropriate",
                      "copyright",
                      "spam",
                      "offensive",
                      "harassment",
                      "other"
                    ],
                    "description": "سبب الإبلاغ"
                  },
                  "description": {
                    "type": "string",
                    "description": "وصف تفصيلي للإبلاغ"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "تم إنشاء التقرير بنجاح"
          },
          "400": {
            "description": "بيانات غير صالحة"
          },
          "404": {
            "description": "المحتوى المبلغ عنه غير موجود"
          }
        }
      }
    },
    "/reports/my": {
      "get": {
        "tags": ["Reports"],
        "summary": "عرض تقاريري",
        "description": "عرض التقارير التي قام المستخدم بإنشائها",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "عدد العناصر في الصفحة"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "resolved", "rejected"]
            },
            "description": "تصفية حسب الحالة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب التقارير بنجاح"
          }
        }
      }
    },
    "/reports/{reportId}": {
      "get": {
        "tags": ["Reports"],
        "summary": "عرض تفاصيل تقرير",
        "description": "عرض تفاصيل تقرير محدد",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف التقرير"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب تفاصيل التقرير بنجاح"
          },
          "404": {
            "description": "التقرير غير موجود"
          }
        }
      },
      "delete": {
        "tags": ["Reports"],
        "summary": "حذف تقرير",
        "description": "حذف تقرير قام المستخدم بإنشائه (يمكن فقط إذا كان التقرير قيد الانتظار)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف التقرير"
          }
        ],
        "responses": {
          "200": {
            "description": "تم حذف التقرير بنجاح"
          },
          "404": {
            "description": "التقرير غير موجود أو لا يمكن حذفه"
          }
        }
      }
    },
    "/reports/admin/stats": {
      "get": {
        "tags": ["Reports", "Admin"],
        "summary": "إحصائيات التقارير",
        "description": "عرض إحصائيات التقارير (للمدير فقط)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب إحصائيات التقارير بنجاح"
          },
          "403": {
            "description": "غير مصرح لك بعرض إحصائيات التقارير"
          }
        }
      }
    },
    "/reports/admin/all": {
      "get": {
        "tags": ["Reports", "Admin"],
        "summary": "قائمة جميع التقارير",
        "description": "عرض قائمة جميع التقارير (للمدير فقط)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "عدد العناصر في الصفحة"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "resolved", "rejected"]
            },
            "description": "تصفية حسب الحالة"
          },
          {
            "name": "contentType",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["artwork", "image", "user", "comment", "message"]
            },
            "description": "تصفية حسب نوع المحتوى"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب قائمة التقارير بنجاح"
          },
          "403": {
            "description": "غير مصرح لك بعرض قائمة التقارير"
          }
        }
      }
    },
    "/reports/admin/{reportId}/status": {
      "patch": {
        "tags": ["Reports", "Admin"],
        "summary": "تحديث حالة تقرير",
        "description": "تحديث حالة تقرير (للمدير فقط)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف التقرير"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["status"],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["resolved", "rejected"],
                    "description": "الحالة الجديدة"
                  },
                  "adminNotes": {
                    "type": "string",
                    "description": "ملاحظات المدير"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تحديث حالة التقرير بنجاح"
          },
          "400": {
            "description": "بيانات غير صالحة"
          },
          "403": {
            "description": "غير مصرح لك بتحديث حالة التقرير"
          },
          "404": {
            "description": "التقرير غير موجود"
          }
        }
      }
    },
    "/api/artworks": {
      "get": {
        "tags": ["Artworks"],
        "summary": "قائمة الأعمال الفنية",
        "description": "الحصول على قائمة بجميع الأعمال الفنية مع دعم الصفحات",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 12
            },
            "description": "عدد العناصر في الصفحة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب الأعمال الفنية بنجاح"
          }
        }
      },
      "post": {
        "tags": ["Artworks"],
        "summary": "إنشاء عمل فني جديد",
        "description": "إضافة عمل فني جديد (للفنانين فقط)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title", "description", "image", "price", "category"],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "عنوان العمل الفني"
                  },
                  "description": {
                    "type": "string",
                    "description": "وصف العمل الفني"
                  },
                  "image": {
                    "type": "string",
                    "format": "uri",
                    "description": "رابط صورة العمل الفني"
                  },
                  "price": {
                    "type": "number",
                    "description": "سعر العمل الفني"
                  },
                  "category": {
                    "type": "string",
                    "description": "معرف فئة العمل الفني"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "وسوم العمل الفني"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "تم إضافة العمل الفني بنجاح"
          },
          "400": {
            "description": "بيانات غير صالحة"
          }
        }
      }
    },
    "/api/artworks/search": {
      "get": {
        "tags": ["Artworks"],
        "summary": "البحث المتقدم في الأعمال الفنية",
        "description": "البحث في الأعمال الفنية مع دعم التصفية المتقدمة",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "نص البحث (في العنوان والوصف)"
          },
          {
            "name": "minPrice",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "description": "الحد الأدنى للسعر"
          },
          {
            "name": "maxPrice",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "description": "الحد الأقصى للسعر"
          },
          {
            "name": "minRating",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "description": "الحد الأدنى للتقييم (1-5)"
          },
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "معرف الفئة"
          },
          {
            "name": "artist",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "معرف الفنان"
          },
          {
            "name": "tags",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "الوسوم للتصفية"
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["price", "createdAt", "title", "rating"]
            },
            "description": "ترتيب حسب"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "desc"
            },
            "description": "ترتيب تصاعدي أو تنازلي"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 12
            },
            "description": "عدد العناصر في الصفحة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب نتائج البحث بنجاح"
          }
        }
      }
    },
    "/api/artworks/artist/{artistId}": {
      "get": {
        "tags": ["Artworks"],
        "summary": "أعمال الفنان",
        "description": "الحصول على الأعمال الفنية لفنان محدد",
        "parameters": [
          {
            "name": "artistId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف الفنان"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 12
            },
            "description": "عدد العناصر في الصفحة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب أعمال الفنان بنجاح"
          },
          "404": {
            "description": "الفنان غير موجود"
          }
        }
      }
    },
    "/api/artworks/category/{categoryId}": {
      "get": {
        "tags": ["Artworks"],
        "summary": "أعمال حسب الفئة",
        "description": "الحصول على الأعمال الفنية في فئة محددة",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف الفئة"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 12
            },
            "description": "عدد العناصر في الصفحة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب الأعمال حسب الفئة بنجاح"
          }
        }
      }
    },
    "/api/artworks/{id}": {
      "get": {
        "tags": ["Artworks"],
        "summary": "تفاصيل عمل فني",
        "description": "الحصول على تفاصيل عمل فني محدد",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف العمل الفني"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب تفاصيل العمل الفني بنجاح"
          },
          "404": {
            "description": "العمل الفني غير موجود"
          }
        }
      },
      "patch": {
        "tags": ["Artworks"],
        "summary": "تحديث عمل فني",
        "description": "تحديث بيانات عمل فني (للفنان المالك فقط)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف العمل الفني"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "عنوان العمل الفني"
                  },
                  "description": {
                    "type": "string",
                    "description": "وصف العمل الفني"
                  },
                  "image": {
                    "type": "string",
                    "format": "uri",
                    "description": "رابط صورة العمل الفني"
                  },
                  "price": {
                    "type": "number",
                    "description": "سعر العمل الفني"
                  },
                  "category": {
                    "type": "string",
                    "description": "معرف فئة العمل الفني"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "وسوم العمل الفني"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تحديث العمل الفني بنجاح"
          },
          "404": {
            "description": "العمل الفني غير موجود أو غير مصرح"
          }
        }
      },
      "delete": {
        "tags": ["Artworks"],
        "summary": "حذف عمل فني",
        "description": "حذف عمل فني (للفنان المالك فقط)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف العمل الفني"
          }
        ],
        "responses": {
          "200": {
            "description": "تم حذف العمل الفني بنجاح"
          },
          "404": {
            "description": "العمل الفني غير موجود أو غير مصرح"
          }
        }
      }
    },
    "/api/artworks/{id}/similar": {
      "get": {
        "tags": ["Artworks"],
        "summary": "الأعمال الفنية المشابهة",
        "description": "الحصول على أعمال فنية مشابهة لعمل فني محدد",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف العمل الفني"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 6
            },
            "description": "عدد الأعمال المشابهة المطلوبة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب الأعمال المشابهة بنجاح"
          },
          "404": {
            "description": "العمل الفني غير موجود"
          }
        }
      }
    },
    "/api/artworks/{id}/reviews": {
      "get": {
        "tags": ["Artworks", "Reviews"],
        "summary": "مراجعات العمل الفني",
        "description": "الحصول على مراجعات وتقييمات عمل فني محدد",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف العمل الفني"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "عدد العناصر في الصفحة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب المراجعات بنجاح"
          }
        }
      }
    },
    "/api/home": {
      "get": {
        "tags": ["Home"],
        "summary": "Get home page data",
        "description": "Retrieve data for the home page including featured artworks, artists, and categories",
        "responses": {
          "200": {
            "description": "Home page data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "featuredArtworks": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Artwork"
                          }
                        },
                        "featuredArtists": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        "categories": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Category"
                          }
                        },
                        "banners": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Banner"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/home/search": {
      "get": {
        "tags": ["Home"],
        "summary": "Search artworks, artists and images",
        "description": "Search for artworks, artists and images by query term with filters",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search query"
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["all", "artworks", "artists", "images"],
              "default": "all"
            },
            "description": "Type of results to return"
          },
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by category"
          },
          {
            "name": "price_min",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "description": "Minimum price (for artworks)"
          },
          {
            "name": "price_max",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "description": "Maximum price (for artworks)"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "artworks": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Artwork"
                          }
                        },
                        "artists": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        "images": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Image"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/home/trending": {
      "get": {
        "tags": ["Home"],
        "summary": "Get trending content",
        "description": "Retrieve trending artworks, artists, and images",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["all", "artworks", "artists", "images"],
              "default": "all"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trending content retrieved successfully"
          }
        }
      }
    },
    "/api/home/explore": {
      "get": {
        "tags": ["Home"],
        "summary": "Explore content for discovery",
        "description": "Get curated content for the explore section",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Explore content retrieved successfully"
          }
        }
      }
    },
    "/api/image/upload": {
      "post": {
        "tags": ["Image"],
        "summary": "Upload images",
        "description": "Upload one or more images with metadata",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Image files to upload (maximum 10)"
                  },
                  "title": {
                    "type": "string",
                    "description": "Image title (optional)"
                  },
                  "description": {
                    "type": "string",
                    "description": "Image description (optional)"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Image tags (optional)"
                  },
                  "category": {
                    "type": "string",
                    "description": "Image category (optional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Images uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadImagesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/image/upload/firebase": {
      "post": {
        "tags": ["Image"],
        "summary": "Upload images with Firebase auth",
        "description": "Upload one or more images using Firebase authentication",
        "security": [
          {
            "FirebaseAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "category": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Images uploaded successfully"
          }
        }
      }
    },
    "/api/image/my-images": {
      "get": {
        "tags": ["Image"],
        "summary": "Get user images",
        "description": "Get all images uploaded by the authenticated user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20
            }
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Images retrieved successfully"
          }
        }
      }
    },
    "/api/image/my-images/firebase": {
      "get": {
        "tags": ["Image"],
        "summary": "Get user images with Firebase auth",
        "description": "Get all images uploaded by the user authenticated with Firebase",
        "security": [
          {
            "FirebaseAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20
            }
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Images retrieved successfully"
          }
        }
      }
    },
    "/api/image/{imageId}": {
      "get": {
        "tags": ["Image"],
        "summary": "Get image details",
        "description": "Get details of a specific image",
        "parameters": [
          {
            "in": "path",
            "name": "imageId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Image retrieved successfully"
          },
          "404": {
            "description": "Image not found"
          }
        }
      },
      "patch": {
        "tags": ["Image"],
        "summary": "Update image metadata",
        "description": "Update metadata of a specific image",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "imageId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "category": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Image updated successfully"
          },
          "404": {
            "description": "Image not found"
          }
        }
      }
    },
    "/api/image/{imageId}/firebase": {
      "patch": {
        "tags": ["Image"],
        "summary": "Update image metadata with Firebase auth",
        "description": "Update metadata of a specific image using Firebase authentication",
        "security": [
          {
            "FirebaseAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "imageId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "category": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Image updated successfully"
          },
          "404": {
            "description": "Image not found"
          }
        }
      }
    },
    "/api/image/{publicId}": {
      "delete": {
        "tags": ["Image"],
        "summary": "Delete image",
        "description": "Delete a specific image",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "publicId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Image deleted successfully"
          },
          "404": {
            "description": "Image not found"
          }
        }
      }
    },
    "/api/image/{publicId}/firebase": {
      "delete": {
        "tags": ["Image"],
        "summary": "Delete image with Firebase auth",
        "description": "Delete a specific image using Firebase authentication",
        "security": [
          {
            "FirebaseAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "publicId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Image deleted successfully"
          },
          "404": {
            "description": "Image not found"
          }
        }
      }
    },
    "/api/image/categories/popular": {
      "get": {
        "tags": ["Image", "Categories"],
        "summary": "Get popular image categories",
        "description": "Get a list of popular image categories with counts",
        "responses": {
          "200": {
            "description": "Categories retrieved successfully"
          }
        }
      }
    },
    "/api/reports": {
      "post": {
        "tags": ["Reports"],
        "summary": "إنشاء تقرير جديد",
        "description": "الإبلاغ عن محتوى غير مناسب",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["contentType", "contentId", "reason"],
                "properties": {
                  "contentType": {
                    "type": "string",
                    "enum": ["artwork", "image", "user", "comment", "message"],
                    "description": "نوع المحتوى المبلغ عنه"
                  },
                  "contentId": {
                    "type": "string",
                    "description": "معرف المحتوى المبلغ عنه"
                  },
                  "reason": {
                    "type": "string",
                    "enum": [
                      "inappropriate",
                      "copyright",
                      "spam",
                      "offensive",
                      "harassment",
                      "other"
                    ],
                    "description": "سبب الإبلاغ"
                  },
                  "description": {
                    "type": "string",
                    "description": "وصف تفصيلي للإبلاغ"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "تم إنشاء التقرير بنجاح"
          },
          "400": {
            "description": "بيانات غير صالحة"
          },
          "404": {
            "description": "المحتوى المبلغ عنه غير موجود"
          }
        }
      }
    },
    "/api/reports/my": {
      "get": {
        "tags": ["Reports"],
        "summary": "عرض تقاريري",
        "description": "عرض التقارير التي قام المستخدم بإنشائها",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "عدد العناصر في الصفحة"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "resolved", "rejected"]
            },
            "description": "تصفية حسب الحالة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب التقارير بنجاح"
          }
        }
      }
    },
    "/api/reports/{reportId}": {
      "get": {
        "tags": ["Reports"],
        "summary": "عرض تفاصيل تقرير",
        "description": "عرض تفاصيل تقرير محدد",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف التقرير"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب تفاصيل التقرير بنجاح"
          },
          "404": {
            "description": "التقرير غير موجود"
          }
        }
      },
      "delete": {
        "tags": ["Reports"],
        "summary": "حذف تقرير",
        "description": "حذف تقرير قام المستخدم بإنشائه (يمكن فقط إذا كان التقرير قيد الانتظار)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف التقرير"
          }
        ],
        "responses": {
          "200": {
            "description": "تم حذف التقرير بنجاح"
          },
          "404": {
            "description": "التقرير غير موجود أو لا يمكن حذفه"
          }
        }
      }
    },
    "/api/reports/admin/stats": {
      "get": {
        "tags": ["Reports", "Admin"],
        "summary": "إحصائيات التقارير",
        "description": "عرض إحصائيات التقارير (للمدير فقط)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب إحصائيات التقارير بنجاح"
          },
          "403": {
            "description": "غير مصرح لك بعرض إحصائيات التقارير"
          }
        }
      }
    },
    "/api/reports/admin/all": {
      "get": {
        "tags": ["Reports", "Admin"],
        "summary": "قائمة جميع التقارير",
        "description": "عرض قائمة جميع التقارير (للمدير فقط)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "عدد العناصر في الصفحة"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "resolved", "rejected"]
            },
            "description": "تصفية حسب الحالة"
          },
          {
            "name": "contentType",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["artwork", "image", "user", "comment", "message"]
            },
            "description": "تصفية حسب نوع المحتوى"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب قائمة التقارير بنجاح"
          },
          "403": {
            "description": "غير مصرح لك بعرض قائمة التقارير"
          }
        }
      }
    },
    "/api/reports/admin/{reportId}/status": {
      "patch": {
        "tags": ["Reports", "Admin"],
        "summary": "تحديث حالة تقرير",
        "description": "تحديث حالة تقرير محدد (للمدير فقط)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف التقرير"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["status"],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["pending", "resolved", "rejected"],
                    "description": "الحالة الجديدة"
                  },
                  "adminNotes": {
                    "type": "string",
                    "description": "ملاحظات المدير"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تحديث حالة التقرير بنجاح"
          },
          "400": {
            "description": "بيانات غير صالحة"
          },
          "403": {
            "description": "غير مصرح لك بتحديث حالة التقارير"
          },
          "404": {
            "description": "التقرير غير موجود"
          }
        }
      }
    },
    "/api/special-requests": {
      "post": {
        "tags": ["Special Requests"],
        "summary": "إنشاء طلب خاص",
        "description": "إرسال طلب خاص لفنان محدد",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["artist", "requestType", "description", "budget"],
                "properties": {
                  "artist": {
                    "type": "string",
                    "description": "معرف الفنان"
                  },
                  "requestType": {
                    "type": "string",
                    "description": "نوع الطلب الخاص"
                  },
                  "description": {
                    "type": "string",
                    "description": "وصف تفصيلي للطلب"
                  },
                  "budget": {
                    "type": "number",
                    "description": "الميزانية المقترحة"
                  },
                  "deadline": {
                    "type": "string",
                    "format": "date-time",
                    "description": "الموعد النهائي (اختياري)"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    },
                    "description": "روابط ملفات مرفقة (اختياري)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "تم إنشاء الطلب الخاص بنجاح"
          },
          "400": {
            "description": "بيانات غير صالحة"
          },
          "404": {
            "description": "الفنان غير موجود"
          }
        }
      }
    },
    "/api/special-requests/my": {
      "get": {
        "tags": ["Special Requests"],
        "summary": "عرض طلباتي الخاصة",
        "description": "عرض الطلبات الخاصة التي أرسلها المستخدم",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "عدد العناصر في الصفحة"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "accepted", "rejected", "completed"]
            },
            "description": "تصفية حسب الحالة"
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "ترتيب حسب الحقل"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "طريقة الترتيب"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب طلبات المستخدم بنجاح"
          }
        }
      }
    },
    "/api/special-requests/artist": {
      "get": {
        "tags": ["Special Requests"],
        "summary": "عرض الطلبات الموجهة للفنان",
        "description": "عرض الطلبات الخاصة المرسلة إلى الفنان",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "عدد العناصر في الصفحة"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "accepted", "rejected", "completed"]
            },
            "description": "تصفية حسب الحالة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب طلبات الفنان بنجاح"
          },
          "403": {
            "description": "غير مصرح لك بعرض طلبات الفنانين"
          }
        }
      }
    },
    "/api/special-requests/artist/stats": {
      "get": {
        "tags": ["Special Requests"],
        "summary": "إحصائيات الطلبات للفنان",
        "description": "عرض إحصائيات الطلبات الخاصة للفنان",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب إحصائيات الطلبات بنجاح"
          },
          "403": {
            "description": "غير مصرح لك بعرض إحصائيات الفنانين"
          }
        }
      }
    },
    "/api/special-requests/{requestId}": {
      "get": {
        "tags": ["Special Requests"],
        "summary": "تفاصيل طلب خاص",
        "description": "عرض تفاصيل طلب خاص محدد",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف الطلب"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب تفاصيل الطلب بنجاح"
          },
          "404": {
            "description": "الطلب غير موجود"
          }
        }
      },
      "delete": {
        "tags": ["Special Requests"],
        "summary": "حذف طلب خاص",
        "description": "حذف طلب خاص (للمرسل فقط وفقط إذا كان الطلب قيد الانتظار أو مرفوضًا)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف الطلب"
          }
        ],
        "responses": {
          "200": {
            "description": "تم حذف الطلب بنجاح"
          },
          "400": {
            "description": "لا يمكن حذف طلب مقبول أو مكتمل"
          },
          "404": {
            "description": "الطلب غير موجود أو غير مصرح بحذفه"
          }
        }
      }
    },
    "/api/special-requests/{requestId}/status": {
      "patch": {
        "tags": ["Special Requests"],
        "summary": "تحديث حالة الطلب",
        "description": "تحديث حالة طلب خاص (للفنان فقط)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف الطلب"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["status"],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["pending", "accepted", "rejected", "completed"]
                  },
                  "response": {
                    "type": "string",
                    "description": "رد أو ملاحظات إضافية"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تحديث حالة الطلب بنجاح"
          },
          "404": {
            "description": "الطلب غير موجود"
          }
        }
      }
    },
    "/api/special-requests/{requestId}/response": {
      "post": {
        "tags": ["Special Requests"],
        "summary": "إضافة رد للطلب",
        "description": "إضافة رد أو تعليق على طلب خاص",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف الطلب"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["response"],
                "properties": {
                  "response": {
                    "type": "string",
                    "description": "الرد أو التعليق"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم إضافة الرد بنجاح"
          },
          "404": {
            "description": "الطلب غير موجود"
          }
        }
      }
    },
    "/api/special-requests/{requestId}/complete": {
      "patch": {
        "tags": ["Special Requests"],
        "summary": "إكمال الطلب الخاص",
        "description": "تحديث حالة الطلب إلى مكتمل مع إضافة روابط التسليم (للفنان فقط)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف الطلب"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "deliverables": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    },
                    "description": "روابط ملفات التسليم"
                  },
                  "finalNote": {
                    "type": "string",
                    "description": "ملاحظة نهائية"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم إكمال الطلب بنجاح"
          },
          "400": {
            "description": "لا يمكن إكمال طلب غير مقبول"
          },
          "404": {
            "description": "الطلب غير موجود"
          }
        }
      }
    },
    "/api/transactions/artwork": {
      "post": {
        "tags": ["Transactions"],
        "summary": "شراء عمل فني",
        "description": "إنشاء معاملة لشراء عمل فني",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["artworkId", "paymentMethod", "shippingAddress"],
                "properties": {
                  "artworkId": {
                    "type": "string",
                    "description": "معرف العمل الفني"
                  },
                  "paymentMethod": {
                    "type": "string",
                    "enum": [
                      "credit_card",
                      "debit_card",
                      "bank_transfer",
                      "paypal",
                      "stripe",
                      "other"
                    ],
                    "description": "طريقة الدفع"
                  },
                  "paymentId": {
                    "type": "string",
                    "description": "معرف عملية الدفع (اختياري)"
                  },
                  "shippingAddress": {
                    "type": "object",
                    "description": "عنوان الشحن",
                    "properties": {
                      "fullName": {
                        "type": "string"
                      },
                      "addressLine1": {
                        "type": "string"
                      },
                      "addressLine2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "postalCode": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "phoneNumber": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "تم إنشاء المعاملة بنجاح"
          },
          "400": {
            "description": "بيانات غير صالحة"
          },
          "404": {
            "description": "العمل الفني غير موجود"
          }
        }
      }
    },
    "/api/transactions/special-request": {
      "post": {
        "tags": ["Transactions"],
        "summary": "الدفع لطلب خاص",
        "description": "إنشاء معاملة لدفع قيمة طلب خاص",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["specialRequestId", "paymentMethod", "shippingAddress"],
                "properties": {
                  "specialRequestId": {
                    "type": "string",
                    "description": "معرف الطلب الخاص"
                  },
                  "paymentMethod": {
                    "type": "string",
                    "enum": [
                      "credit_card",
                      "debit_card",
                      "bank_transfer",
                      "paypal",
                      "stripe",
                      "other"
                    ],
                    "description": "طريقة الدفع"
                  },
                  "paymentId": {
                    "type": "string",
                    "description": "معرف عملية الدفع (اختياري)"
                  },
                  "shippingAddress": {
                    "type": "object",
                    "description": "عنوان الشحن"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "تم إنشاء المعاملة بنجاح"
          },
          "400": {
            "description": "بيانات غير صالحة"
          },
          "404": {
            "description": "الطلب الخاص غير موجود"
          }
        }
      }
    },
    "/api/transactions/{transactionId}": {
      "get": {
        "tags": ["Transactions"],
        "summary": "تفاصيل المعاملة",
        "description": "عرض تفاصيل معاملة محددة",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف المعاملة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب تفاصيل المعاملة بنجاح"
          },
          "404": {
            "description": "المعاملة غير موجودة"
          }
        }
      }
    },
    "/api/transactions/{transactionId}/status": {
      "patch": {
        "tags": ["Transactions"],
        "summary": "تحديث حالة المعاملة",
        "description": "تحديث حالة معاملة محددة (للمدير أو البائع فقط)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف المعاملة"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["status"],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["pending", "completed", "failed", "refunded"],
                    "description": "حالة المعاملة الجديدة"
                  },
                  "notes": {
                    "type": "string",
                    "description": "ملاحظات إضافية"
                  },
                  "trackingInfo": {
                    "type": "object",
                    "description": "معلومات التتبع"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تحديث حالة المعاملة بنجاح"
          },
          "403": {
            "description": "غير مصرح لك بتعديل هذه المعاملة"
          },
          "404": {
            "description": "المعاملة غير موجودة"
          }
        }
      }
    },
    "/api/transactions/{transactionId}/tracking": {
      "patch": {
        "tags": ["Transactions"],
        "summary": "تحديث معلومات الشحن",
        "description": "تحديث معلومات شحن وتتبع معاملة (للبائع فقط)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف المعاملة"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["provider", "trackingNumber"],
                "properties": {
                  "provider": {
                    "type": "string",
                    "description": "مزود خدمة الشحن"
                  },
                  "trackingNumber": {
                    "type": "string",
                    "description": "رقم التتبع"
                  },
                  "trackingUrl": {
                    "type": "string",
                    "description": "رابط تتبع الشحنة"
                  },
                  "estimatedDelivery": {
                    "type": "string",
                    "format": "date-time",
                    "description": "تاريخ التسليم المتوقع"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تحديث معلومات الشحن بنجاح"
          },
          "403": {
            "description": "غير مصرح لك بتعديل هذه المعاملة"
          },
          "404": {
            "description": "المعاملة غير موجودة"
          }
        }
      }
    },
    "/api/transactions/buyer/history": {
      "get": {
        "tags": ["Transactions"],
        "summary": "سجل المشتريات",
        "description": "عرض سجل معاملات الشراء للمستخدم",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "عدد العناصر في الصفحة"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "completed", "failed", "refunded"]
            },
            "description": "تصفية حسب الحالة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب سجل المشتريات بنجاح"
          }
        }
      }
    },
    "/api/transactions/seller/history": {
      "get": {
        "tags": ["Transactions"],
        "summary": "سجل المبيعات",
        "description": "عرض سجل معاملات البيع للفنان",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "عدد العناصر في الصفحة"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "completed", "failed", "refunded"]
            },
            "description": "تصفية حسب الحالة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب سجل المبيعات بنجاح"
          }
        }
      }
    },
    "/api/transactions/seller/stats": {
      "get": {
        "tags": ["Transactions"],
        "summary": "إحصائيات المبيعات",
        "description": "عرض إحصائيات البيع للفنان",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب إحصائيات المبيعات بنجاح"
          },
          "403": {
            "description": "غير مصرح لك بعرض إحصائيات المبيعات"
          }
        }
      }
    },
    "/api/transactions/admin/stats": {
      "get": {
        "tags": ["Transactions", "Admin"],
        "summary": "إحصائيات المعاملات للمدير",
        "description": "عرض إحصائيات جميع المعاملات في المنصة (للمدير فقط)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب إحصائيات المعاملات بنجاح"
          },
          "403": {
            "description": "غير مصرح لك بعرض إحصائيات المعاملات"
          }
        }
      }
    },
    "/api/user/wishlist/toggle": {
      "post": {
        "tags": ["User"],
        "summary": "Toggle artwork in wishlist",
        "description": "Add or remove an artwork from user's wishlist",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["artworkId"],
                "properties": {
                  "artworkId": {
                    "type": "string",
                    "description": "ID of the artwork to toggle in wishlist"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Artwork toggled in wishlist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "action": {
                      "type": "string",
                      "enum": ["added", "removed"]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/wishlist/toggle/firebase": {
      "post": {
        "tags": ["User"],
        "summary": "Toggle artwork in wishlist with Firebase auth",
        "description": "Add or remove an artwork from user's wishlist using Firebase authentication",
        "security": [
          {
            "FirebaseAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["artworkId"],
                "properties": {
                  "artworkId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Artwork toggled in wishlist"
          }
        }
      }
    },
    "/api/user/wishlist": {
      "get": {
        "tags": ["User"],
        "summary": "Get user wishlist",
        "description": "Get all artworks in the user's wishlist",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Wishlist retrieved successfully"
          }
        }
      }
    },
    "/api/user/wishlist/firebase": {
      "get": {
        "tags": ["User"],
        "summary": "Get user wishlist with Firebase auth",
        "description": "Get all artworks in the user's wishlist using Firebase authentication",
        "security": [
          {
            "FirebaseAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Wishlist retrieved successfully"
          }
        }
      }
    },
    "/api/user/profile": {
      "put": {
        "tags": ["User"],
        "summary": "Update user profile",
        "description": "Update user profile information",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string"
                  },
                  "job": {
                    "type": "string"
                  },
                  "profileImage": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  "coverImages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully"
          }
        }
      }
    },
    "/api/user/profile/firebase": {
      "put": {
        "tags": ["User"],
        "summary": "Update user profile with Firebase auth",
        "description": "Update user profile information using Firebase authentication",
        "security": [
          {
            "FirebaseAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string"
                  },
                  "job": {
                    "type": "string"
                  },
                  "profileImage": {
                    "type": "object"
                  },
                  "coverImages": {
                    "type": "array"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully"
          }
        }
      }
    },
    "/api/user/change-password": {
      "patch": {
        "tags": ["User"],
        "summary": "Change password",
        "description": "Change user password",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["oldPassword", "newPassword"],
                "properties": {
                  "oldPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully"
          }
        }
      }
    },
    "/api/user/artist-profile/{artistId}": {
      "get": {
        "tags": ["User"],
        "summary": "Get artist profile",
        "description": "Get detailed profile information for an artist",
        "parameters": [
          {
            "in": "path",
            "name": "artistId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artist profile retrieved successfully"
          },
          "404": {
            "description": "Artist not found"
          }
        }
      }
    },
    "/api/user/profile/{artistId}": {
      "get": {
        "tags": ["User"],
        "summary": "Get artist profile (alias)",
        "description": "Get detailed profile information for an artist (alias of /artist-profile/{artistId})",
        "parameters": [
          {
            "in": "path",
            "name": "artistId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artist profile retrieved successfully"
          },
          "404": {
            "description": "Artist not found"
          }
        }
      }
    },
    "/api/user/follow/{artistId}": {
      "post": {
        "tags": ["User"],
        "summary": "Follow artist",
        "description": "Follow an artist",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "artistId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artist followed successfully"
          }
        }
      }
    },
    "/api/user/follow/{artistId}/firebase": {
      "post": {
        "tags": ["User"],
        "summary": "Follow artist with Firebase auth",
        "description": "Follow an artist using Firebase authentication",
        "security": [
          {
            "FirebaseAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "artistId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artist followed successfully"
          }
        }
      }
    },
    "/api/user/unfollow/{artistId}": {
      "post": {
        "tags": ["User"],
        "summary": "Unfollow artist",
        "description": "Unfollow an artist",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "artistId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artist unfollowed successfully"
          }
        }
      }
    },
    "/api/user/unfollow/{artistId}/firebase": {
      "post": {
        "tags": ["User"],
        "summary": "Unfollow artist with Firebase auth",
        "description": "Unfollow an artist using Firebase authentication",
        "security": [
          {
            "FirebaseAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "artistId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artist unfollowed successfully"
          }
        }
      }
    },
    "/api/follow/follow": {
      "post": {
        "tags": ["Follow"],
        "summary": "متابعة فنان",
        "description": "إنشاء متابعة جديدة لفنان",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["artistId"],
                "properties": {
                  "artistId": {
                    "type": "string",
                    "description": "معرف الفنان المراد متابعته"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "تمت المتابعة بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowResponse"
                }
              }
            }
          },
          "400": {
            "description": "خطأ في البيانات المدخلة أو المستخدم يتابع الفنان بالفعل"
          },
          "404": {
            "description": "الفنان غير موجود"
          }
        }
      }
    },
    "/api/follow/unfollow": {
      "post": {
        "tags": ["Follow"],
        "summary": "إلغاء متابعة فنان",
        "description": "إلغاء متابعة فنان تتم متابعته حاليًا",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["artistId"],
                "properties": {
                  "artistId": {
                    "type": "string",
                    "description": "معرف الفنان المراد إلغاء متابعته"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم إلغاء المتابعة بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowResponse"
                }
              }
            }
          },
          "400": {
            "description": "خطأ في البيانات المدخلة أو المستخدم لا يتابع الفنان حاليًا"
          },
          "404": {
            "description": "الفنان غير موجود"
          }
        }
      }
    },
    "/api/follow/followers/{artistId}": {
      "get": {
        "tags": ["Follow"],
        "summary": "الحصول على متابعي فنان",
        "description": "جلب قائمة المستخدمين الذين يتابعون فنانًا معينًا",
        "parameters": [
          {
            "name": "artistId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف الفنان"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "عدد العناصر في الصفحة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب المتابعين بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowersResponse"
                }
              }
            }
          },
          "404": {
            "description": "الفنان غير موجود"
          }
        }
      }
    },
    "/api/follow/following/{userId}": {
      "get": {
        "tags": ["Follow"],
        "summary": "الحصول على متابَعي مستخدم",
        "description": "جلب قائمة الفنانين الذين يتابعهم المستخدم",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف المستخدم"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "عدد العناصر في الصفحة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب المتابَعين بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowingResponse"
                }
              }
            }
          },
          "404": {
            "description": "المستخدم غير موجود"
          }
        }
      }
    },
    "/api/follow/status/{artistId}": {
      "get": {
        "tags": ["Follow"],
        "summary": "التحقق من حالة المتابعة",
        "description": "التحقق مما إذا كان المستخدم الحالي يتابع فنانًا معينًا",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "artistId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف الفنان"
          }
        ],
        "responses": {
          "200": {
            "description": "تم التحقق من حالة المتابعة بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "الفنان غير موجود"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "ChatMessage": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "chatId": {
            "type": "string"
          },
          "sender": {
            "$ref": "#/components/schemas/User"
          },
          "text": {
            "type": "string"
          },
          "read": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Chat": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "lastMessage": {
            "$ref": "#/components/schemas/ChatMessage"
          },
          "unreadCount": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "job": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "profileImage": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "job": {
            "type": "string"
          },
          "profileImage": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      },
      "Artwork": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "artist": {
            "$ref": "#/components/schemas/User"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "icon": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "buyer": {
            "$ref": "#/components/schemas/User"
          },
          "seller": {
            "$ref": "#/components/schemas/User"
          },
          "artwork": {
            "$ref": "#/components/schemas/Artwork"
          },
          "specialRequest": {
            "$ref": "#/components/schemas/SpecialRequest"
          },
          "amount": {
            "type": "number"
          },
          "commissionAmount": {
            "type": "number"
          },
          "netAmount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "paymentMethod": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "completed", "failed", "refunded"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time"
          },
          "shippingAddress": {
            "type": "object"
          },
          "trackingInfo": {
            "type": "object"
          }
        }
      },
      "SpecialRequest": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "معرف الطلب الخاص"
          },
          "sender": {
            "$ref": "#/components/schemas/User",
            "description": "المستخدم المرسل للطلب"
          },
          "artist": {
            "$ref": "#/components/schemas/User",
            "description": "الفنان المستهدف"
          },
          "requestType": {
            "type": "string",
            "description": "نوع الطلب الخاص"
          },
          "description": {
            "type": "string",
            "description": "وصف تفصيلي للطلب"
          },
          "budget": {
            "type": "number",
            "description": "الميزانية المقترحة"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "accepted", "rejected", "completed"],
            "description": "حالة الطلب"
          },
          "response": {
            "type": "string",
            "description": "رد الفنان على الطلب"
          },
          "deadline": {
            "type": "string",
            "format": "date-time",
            "description": "الموعد النهائي للطلب"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "قائمة بروابط الملفات المرفقة بالطلب"
          },
          "deliverables": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "قائمة بروابط ملفات التسليم"
          },
          "finalNote": {
            "type": "string",
            "description": "ملاحظة نهائية عند إكمال الطلب"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "description": "تاريخ إكمال الطلب"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "تاريخ إنشاء الطلب"
          },
          "remainingDays": {
            "type": "integer",
            "description": "عدد الأيام المتبقية حتى الموعد النهائي"
          },
          "isOverdue": {
            "type": "boolean",
            "description": "ما إذا كان الموعد النهائي قد انقضى"
          }
        }
      },
      "Chat": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "lastMessage": {
            "$ref": "#/components/schemas/Message"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "chat": {
            "type": "string"
          },
          "sender": {
            "$ref": "#/components/schemas/User"
          },
          "content": {
            "type": "string"
          },
          "read": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "totalDocs": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "hasPrevPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "prevPage": {
            "type": "integer",
            "nullable": true
          },
          "nextPage": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "Report": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "معرف التقرير"
          },
          "reporter": {
            "type": "string",
            "description": "معرف المستخدم المبلغ"
          },
          "contentType": {
            "type": "string",
            "enum": ["artwork", "image", "user", "comment", "message"],
            "description": "نوع المحتوى المبلغ عنه"
          },
          "contentId": {
            "type": "string",
            "description": "معرف المحتوى المبلغ عنه"
          },
          "targetUser": {
            "type": "string",
            "description": "معرف المستخدم الذي تم الإبلاغ عنه"
          },
          "reason": {
            "type": "string",
            "enum": ["inappropriate", "copyright", "spam", "offensive", "harassment", "other"],
            "description": "سبب الإبلاغ"
          },
          "description": {
            "type": "string",
            "description": "وصف تفصيلي للإبلاغ"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "resolved", "rejected"],
            "description": "حالة الإبلاغ"
          },
          "adminNotes": {
            "type": "string",
            "description": "ملاحظات المدير على الإبلاغ"
          },
          "resolvedAt": {
            "type": "string",
            "format": "date-time",
            "description": "تاريخ حل الإبلاغ"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "تاريخ إنشاء التقرير"
          }
        }
      },
      "Banner": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string",
            "format": "uri"
          },
          "linkType": {
            "type": "string",
            "enum": ["artwork", "artist", "category", "external"]
          },
          "linkId": {
            "type": "string"
          },
          "externalUrl": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "FollowResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "FollowersResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "followers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "FollowingResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "following": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "FollowStatusResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "isFollowing": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "NotificationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "notifications": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Notification"
                }
              },
              "pagination": {
                "type": "object",
                "properties": {
                  "currentPage": {
                    "type": "integer"
                  },
                  "totalPages": {
                    "type": "integer"
                  },
                  "totalItems": {
                    "type": "integer"
                  },
                  "itemsPerPage": {
                    "type": "integer"
                  },
                  "unreadCount": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "sender": {
            "$ref": "#/components/schemas/User"
          },
          "recipient": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "isRead": {
            "type": "boolean"
          },
          "data": {
            "type": "object"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}
