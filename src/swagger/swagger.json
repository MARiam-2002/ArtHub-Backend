{
  "openapi": "3.0.0",
  "info": {
    "title": "ArtHub API",
    "description": "Complete API documentation for ArtHub backend services",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api",
      "description": "Main API server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentication and user management endpoints"
    },
    {
      "name": "Artwork",
      "description": "Artwork management endpoints"
    },
    {
      "name": "Image",
      "description": "Image upload and management"
    },
    {
      "name": "Chat",
      "description": "Chat and messaging functionality"
    },
    {
      "name": "Home",
      "description": "Home page data"
    },
    {
      "name": "Special Requests",
      "description": "Special commission request management"
    },
    {
      "name": "Reports",
      "description": "Content reporting system"
    },
    {
      "name": "Transactions",
      "description": "Financial transactions and payments"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new user",
        "description": "Create a new user account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password",
                  "confirmPassword",
                  "job"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User email address"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "User password (min 8 chars, at least one uppercase letter and one number/special char)"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "description": "Confirm password (must match password)"
                  },
                  "job": {
                    "type": "string",
                    "description": "User job/role"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم التسجيل بنجاح!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "job": {
                          "type": "string"
                        },
                        "token": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or email already registered"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login user",
        "description": "Authenticate user and get token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم تسجيل الدخول بنجاح."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "job": {
                          "type": "string"
                        },
                        "token": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/auth/login-with-fingerprint": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login with fingerprint",
        "description": "Login with device fingerprint",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/social-login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Social login with Firebase",
        "description": "Authenticate user using Firebase token from social login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idToken": {
                    "type": "string",
                    "description": "Firebase ID token"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Firebase token"
          }
        }
      }
    },
    "/auth/forgetCode": {
      "patch": {
        "tags": [
          "Authentication"
        ],
        "summary": "Send password reset code",
        "description": "Send a verification code to user's email for password reset",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset code sent (if email exists)"
          },
          "500": {
            "description": "Failed to send email"
          }
        }
      }
    },
    "/auth/resetPassword": {
      "patch": {
        "tags": [
          "Authentication"
        ],
        "summary": "Reset password",
        "description": "Reset user password when authenticated",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "oldPassword",
                  "newPassword"
                ],
                "properties": {
                  "oldPassword": {
                    "type": "string",
                    "format": "password"
                  },
                  "newPassword": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful"
          },
          "400": {
            "description": "Invalid password"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/VerifyCode": {
      "patch": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify account code",
        "description": "Verify the account verification code sent to email",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account verified successfully"
          },
          "400": {
            "description": "Invalid verification code"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/verifyForgetCode": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify forget password code",
        "description": "Verify the code sent for password reset",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "code"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "code": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Code verified successfully"
          },
          "400": {
            "description": "Invalid code"
          }
        }
      }
    },
    "/auth/resetPasswordByCode": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Reset password by code",
        "description": "Reset password using the verification code",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "code",
                  "newPassword"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "code": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful"
          },
          "400": {
            "description": "Invalid code or email"
          }
        }
      }
    },
    "/image/upload": {
      "post": {
        "tags": [
          "Image"
        ],
        "summary": "Upload images",
        "description": "Upload one or more images to Cloudinary",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Images uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "urls": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Upload failed"
          }
        }
      }
    },
    "/chat": {
      "get": {
        "tags": [
          "Chat"
        ],
        "summary": "Get user chats",
        "description": "Get all chats for the authenticated user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of user chats",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Chat"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/chat/{chatId}/messages": {
      "get": {
        "tags": [
          "Chat"
        ],
        "summary": "Get messages in a chat",
        "description": "Get all messages in a specific chat",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "chatId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Message"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Chat not found"
          }
        }
      }
    },
    "/artwork": {
      "get": {
        "tags": [
          "Artwork"
        ],
        "summary": "Get all artworks",
        "description": "Get all artworks with pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of artworks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "artworks": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Artwork"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/home": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "Get home page data",
        "description": "Get data for home page including featured artworks and categories",
        "responses": {
          "200": {
            "description": "Home page data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "featuredArtworks": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Artwork"
                          }
                        },
                        "categories": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Category"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/home/search": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "Search artworks and artists",
        "description": "Search for artworks and artists by query term",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search query"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "artworks": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Artwork"
                          }
                        },
                        "artists": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions/artwork": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Purchase artwork",
        "description": "Create a transaction to purchase an artwork",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "artworkId",
                  "paymentMethod",
                  "shippingAddress"
                ],
                "properties": {
                  "artworkId": {
                    "type": "string",
                    "description": "ID of the artwork to purchase"
                  },
                  "paymentMethod": {
                    "type": "string",
                    "enum": ["credit_card", "debit_card", "bank_transfer", "paypal", "stripe", "other"],
                    "description": "Payment method"
                  },
                  "paymentId": {
                    "type": "string",
                    "description": "Payment ID from payment gateway (optional)"
                  },
                  "shippingAddress": {
                    "type": "object",
                    "required": [
                      "fullName",
                      "addressLine1",
                      "city",
                      "country",
                      "phoneNumber"
                    ],
                    "properties": {
                      "fullName": {
                        "type": "string",
                        "description": "Recipient's full name"
                      },
                      "addressLine1": {
                        "type": "string",
                        "description": "Address line 1"
                      },
                      "addressLine2": {
                        "type": "string",
                        "description": "Address line 2 (optional)"
                      },
                      "city": {
                        "type": "string",
                        "description": "City"
                      },
                      "state": {
                        "type": "string",
                        "description": "State/Province (optional)"
                      },
                      "postalCode": {
                        "type": "string",
                        "description": "Postal/ZIP code (optional)"
                      },
                      "country": {
                        "type": "string",
                        "description": "Country"
                      },
                      "phoneNumber": {
                        "type": "string",
                        "description": "Contact phone number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Transaction created successfully"
          },
          "400": {
            "description": "Invalid input data"
          },
          "404": {
            "description": "Artwork not found"
          }
        }
      }
    },
    "/transactions/special-request": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Pay for special request",
        "description": "Create a transaction to pay for an accepted special request",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "specialRequestId",
                  "paymentMethod",
                  "shippingAddress"
                ],
                "properties": {
                  "specialRequestId": {
                    "type": "string",
                    "description": "ID of the special request to pay for"
                  },
                  "paymentMethod": {
                    "type": "string",
                    "enum": ["credit_card", "debit_card", "bank_transfer", "paypal", "stripe", "other"],
                    "description": "Payment method"
                  },
                  "paymentId": {
                    "type": "string",
                    "description": "Payment ID from payment gateway (optional)"
                  },
                  "shippingAddress": {
                    "type": "object",
                    "description": "Shipping address details"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Transaction created successfully"
          },
          "400": {
            "description": "Invalid input data"
          },
          "404": {
            "description": "Special request not found"
          }
        }
      }
    },
    "/transactions/{transactionId}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get transaction details",
        "description": "Get details of a specific transaction",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the transaction"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction details retrieved successfully"
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/{transactionId}/status": {
      "patch": {
        "tags": [
          "Transactions"
        ],
        "summary": "Update transaction status",
        "description": "Update status of a transaction (admin or seller only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the transaction"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["pending", "completed", "failed", "refunded"],
                    "description": "New transaction status"
                  },
                  "notes": {
                    "type": "string",
                    "description": "Additional notes (optional)"
                  },
                  "trackingInfo": {
                    "type": "object",
                    "description": "Tracking information (optional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaction status updated successfully"
          },
          "403": {
            "description": "Unauthorized to update this transaction"
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/{transactionId}/tracking": {
      "patch": {
        "tags": [
          "Transactions"
        ],
        "summary": "Update shipping tracking",
        "description": "Update shipping and tracking information for a transaction (seller only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the transaction"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "provider",
                  "trackingNumber"
                ],
                "properties": {
                  "provider": {
                    "type": "string",
                    "description": "Shipping provider"
                  },
                  "trackingNumber": {
                    "type": "string",
                    "description": "Tracking number"
                  },
                  "trackingUrl": {
                    "type": "string",
                    "description": "Tracking URL (optional)"
                  },
                  "estimatedDelivery": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Estimated delivery date (optional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tracking information updated successfully"
          },
          "403": {
            "description": "Unauthorized to update this transaction"
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/transactions/buyer/history": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get purchase history",
        "description": "Get user's purchase transaction history",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Items per page"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "completed", "failed", "refunded"]
            },
            "description": "Filter by status"
          }
        ],
        "responses": {
          "200": {
            "description": "Purchase history retrieved successfully"
          }
        }
      }
    },
    "/transactions/seller/history": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get sales history",
        "description": "Get seller's sales transaction history",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Items per page"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "completed", "failed", "refunded"]
            },
            "description": "Filter by status"
          }
        ],
        "responses": {
          "200": {
            "description": "Sales history retrieved successfully"
          }
        }
      }
    },
    "/transactions/seller/stats": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get seller stats",
        "description": "Get sales statistics for seller",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Sales statistics retrieved successfully"
          },
          "403": {
            "description": "Unauthorized to view statistics"
          }
        }
      }
    },
    "/transactions/admin/stats": {
      "get": {
        "tags": [
          "Transactions",
          "Admin"
        ],
        "summary": "Get admin transaction stats",
        "description": "Get platform-wide transaction statistics (admin only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction statistics retrieved successfully"
          },
          "403": {
            "description": "Unauthorized to view admin statistics"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "AuthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "job": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "profileImage": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "job": {
            "type": "string"
          },
          "profileImage": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      },
      "Artwork": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "artist": {
            "$ref": "#/components/schemas/User"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "icon": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "buyer": {
            "$ref": "#/components/schemas/User"
          },
          "seller": {
            "$ref": "#/components/schemas/User"
          },
          "artwork": {
            "$ref": "#/components/schemas/Artwork"
          },
          "specialRequest": {
            "$ref": "#/components/schemas/SpecialRequest"
          },
          "amount": {
            "type": "number"
          },
          "commissionAmount": {
            "type": "number"
          },
          "netAmount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "paymentMethod": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "completed", "failed", "refunded"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time"
          },
          "shippingAddress": {
            "type": "object"
          },
          "trackingInfo": {
            "type": "object"
          }
        }
      },
      "SpecialRequest": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "sender": {
            "$ref": "#/components/schemas/User"
          },
          "artist": {
            "$ref": "#/components/schemas/User"
          },
          "requestType": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "budget": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "accepted", "rejected", "completed"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Chat": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "lastMessage": {
            "$ref": "#/components/schemas/Message"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "chat": {
            "type": "string"
          },
          "sender": {
            "$ref": "#/components/schemas/User"
          },
          "content": {
            "type": "string"
          },
          "read": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "totalDocs": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "hasPrevPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "prevPage": {
            "type": "integer",
            "nullable": true
          },
          "nextPage": {
            "type": "integer",
            "nullable": true
          }
        }
      }
    }
  }
}
