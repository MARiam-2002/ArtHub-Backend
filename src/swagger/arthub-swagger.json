{
  "openapi": "3.0.0",
  "info": {
    "title": "ArtHub API",
    "description": "\n# واجهة برمجة التطبيقات للفنانين والمبدعين\n\nتوثيق شامل لواجهة برمجة التطبيقات الخاصة بمنصة ArtHub. تدعم هذه المنصة الفنانين والمبدعين في عرض أعمالهم الفنية والتواصل مع العملاء.\n\n## الميزات الرئيسية\n\n- واجهة RESTful كاملة للتطبيقات\n- مصادقة مزدوجة (Firebase والخادم)\n- دعم متعدد اللغات (العربية والإنجليزية)\n- رفع ومعالجة الصور والأعمال الفنية\n- نظام مراسلة متكامل\n- نظام إشعارات متقدم\n- نظام معاملات مالية وطلبات خاصة\n- دعم المتابعة والتقييمات\n- نظام تقارير وإحصائيات\n- تحسين وضغط الصور تلقائياً\n\n## استخدام API\n\nيمكن استخدام واجهة برمجة التطبيقات هذه من تطبيقات الهاتف المحمول (Flutter) أو أي تطبيق آخر.\n\n## دعم تعدد اللغات\n\nتوفر API دعماً كاملاً للغتين العربية والإنجليزية. يمكن تحديد اللغة المفضلة في طلبات API باستخدام المعلمة `language` (ar أو en).\nكما يمكن للمستخدمين تعيين اللغة المفضلة في ملفهم الشخصي.\n\n## تنظيم API حسب شاشات التطبيق\n\nلتسهيل تطوير تطبيق Flutter، تم تنظيم واجهات API وفقًا لشاشات التطبيق. انظر إلى الحقل \"x-screen\" في كل واجهة API لمعرفة الشاشة المرتبطة بها.\n\nللحصول على مستند يربط بين الشاشات وواجهات API، راجع [دليل ربط واجهات API بشاشات التطبيق](/docs/SCREEN_API_MAPPING.md).\n",
    "version": "1.0.0",
    "contact": {
      "name": "فريق دعم ArtHub",
      "email": "support@arthub.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "/",
      "description": "خادم API الرئيسي"
    },
    {
      "url": "https://arthub-api.vercel.app",
      "description": "خادم الإنتاج"
    },
    {
      "url": "http://localhost:5000",
      "description": "خادم التطوير المحلي"
    }
  ],
  "components": {
    "schemas": {
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "تمت العملية بنجاح"
          },
          "data": {
            "type": "object",
            "example": {}
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2023-06-15T10:30:45.123Z"
          },
          "requestId": {
            "type": "string",
            "example": "req-123abc456"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "حدث خطأ أثناء معالجة الطلب"
          },
          "error": {
            "type": "string",
            "example": "وصف تفصيلي للخطأ"
          },
          "status": {
            "type": "integer",
            "example": 400
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2023-06-15T10:30:45.123Z"
          },
          "requestId": {
            "type": "string",
            "example": "req-123abc456"
          }
        }
      },
      "LanguagePreference": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "enum": [
              "ar",
              "en"
            ],
            "example": "ar",
            "description": "رمز اللغة المفضلة (ar للعربية، en للإنجليزية)"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "حالة الاستجابة"
          },
          "message": {
            "type": "string",
            "description": "رسالة الاستجابة"
          },
          "data": {
            "type": "object",
            "description": "بيانات الاستجابة"
          },
          "status": {
            "type": "integer",
            "description": "رمز حالة HTTP"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "توقيت الاستجابة"
          }
        }
      },
      "Error400": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "بيانات غير صالحة"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "example": "email"
                },
                "message": {
                  "type": "string",
                  "example": "يجب أن يكون البريد الإلكتروني صالحًا"
                }
              }
            }
          },
          "status": {
            "type": "integer",
            "example": 400
          }
        }
      },
      "Error401": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "غير مصرح لك بالوصول"
          },
          "status": {
            "type": "integer",
            "example": 401
          }
        }
      },
      "Error404": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "لم يتم العثور على المورد المطلوب"
          },
          "status": {
            "type": "integer",
            "example": 404
          }
        }
      },
      "Error500": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "حدث خطأ في الخادم"
          },
          "status": {
            "type": "integer",
            "example": 500
          }
        }
      },
      "UserLoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "Password123!"
          }
        }
      },
      "UserRegisterRequest": {
        "type": "object",
        "required": [
          "email",
          "password",
          "confirmPassword",
          "displayName"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "Password123!"
          },
          "confirmPassword": {
            "type": "string",
            "format": "password",
            "example": "Password123!"
          },
          "displayName": {
            "type": "string",
            "example": "أحمد محمد"
          },
          "profileImage": {
            "type": "string",
            "format": "binary"
          },
          "phoneNumber": {
            "type": "string",
            "example": "+966512345678"
          }
        }
      },
      "ForgetPasswordRequest": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          }
        }
      },
      "VerificationCodeRequest": {
        "type": "object",
        "required": [
          "email",
          "forgetCode"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "forgetCode": {
            "type": "string",
            "pattern": "^\\d{4}$",
            "example": "1234"
          }
        }
      },
      "ResetPasswordRequest": {
        "type": "object",
        "required": [
          "email",
          "password",
          "confirmPassword"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "NewPassword123!",
            "minLength": 8
          },
          "confirmPassword": {
            "type": "string",
            "format": "password",
            "example": "NewPassword123!"
          }
        }
      },
      "FCMTokenRequest": {
        "type": "object",
        "required": [
          "fcmToken"
        ],
        "properties": {
          "fcmToken": {
            "type": "string",
            "example": "fMEGG8-TQVSEJHBFrk-BZ3:APA91bHZKmJLnmRJHBFrk..."
          }
        }
      },
      "AuthSuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "تم تسجيل الدخول بنجاح"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "60d0fe4f5311236168a109ca"
              },
              "displayName": {
                "type": "string",
                "example": "أحمد محمد"
              },
              "email": {
                "type": "string",
                "format": "email",
                "example": "user@example.com"
              },
              "role": {
                "type": "string",
                "enum": [
                  "user",
                  "artist"
                ],
                "example": "user"
              },
              "profileImage": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://res.cloudinary.com/demo/image/upload/v1612345678/profile.jpg"
                  }
                }
              },
              "token": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              }
            }
          }
        }
      },
      "TokenModel": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d0fe4f5311236168a109cb"
          },
          "user": {
            "type": "string",
            "example": "60d0fe4f5311236168a109ca"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "userAgent": {
            "type": "string",
            "example": "Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X)"
          },
          "isValid": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-15T10:30:45.123Z"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-06-15T10:30:45.123Z"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d0fe4f5311236168a109ca"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "ahmed@example.com"
          },
          "displayName": {
            "type": "string",
            "example": "أحمد محمد"
          },
          "role": {
            "type": "string",
            "enum": [
              "user",
              "artist"
            ],
            "example": "artist"
          },
          "profileImage": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              },
              "publicId": {
                "type": "string"
              }
            }
          },
          "bio": {
            "type": "string",
            "example": "فنان تشكيلي متخصص في الرسم الزيتي"
          },
          "job": {
            "type": "string",
            "example": "رسام"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NotificationResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d0fe4f5311236168a109ca"
          },
          "title": {
            "type": "object",
            "properties": {
              "ar": {
                "type": "string",
                "example": "لديك رسالة جديدة"
              },
              "en": {
                "type": "string",
                "example": "You have a new message"
              }
            }
          },
          "message": {
            "type": "object",
            "properties": {
              "ar": {
                "type": "string",
                "example": "أرسل لك محمد رسالة جديدة"
              },
              "en": {
                "type": "string",
                "example": "Mohammed sent you a new message"
              }
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "message",
              "artwork",
              "follow",
              "review",
              "transaction",
              "special_request"
            ],
            "example": "message"
          },
          "isRead": {
            "type": "boolean",
            "example": false
          },
          "data": {
            "type": "object",
            "properties": {
              "screen": {
                "type": "string",
                "example": "ChatScreen"
              },
              "id": {
                "type": "string",
                "example": "60d0fe4f5311236168a109ca"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-15T10:30:45.123Z"
          }
        }
      },
      "NotificationsListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "تم جلب الإشعارات بنجاح"
          },
          "data": {
            "type": "object",
            "properties": {
              "notifications": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              },
              "pagination": {
                "type": "object",
                "properties": {
                  "currentPage": {
                    "type": "integer",
                    "example": 1
                  },
                  "totalPages": {
                    "type": "integer",
                    "example": 5
                  },
                  "totalItems": {
                    "type": "integer",
                    "example": 25
                  },
                  "unreadCount": {
                    "type": "integer",
                    "example": 3
                  }
                }
              }
            }
          }
        }
      },
      "ImageUploadResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "تم رفع الصورة بنجاح"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "60d21b4667d0d8992e610c85"
              },
              "url": {
                "type": "string",
                "example": "https://res.cloudinary.com/demo/image/upload/v1612345678/artwork.jpg"
              },
              "publicId": {
                "type": "string",
                "example": "arthub/images/abcdef123456"
              },
              "title": {
                "type": "object",
                "properties": {
                  "ar": {
                    "type": "string",
                    "example": "لوحة زهور زرقاء"
                  },
                  "en": {
                    "type": "string",
                    "example": "Blue Flowers Painting"
                  }
                }
              },
              "optimizationLevel": {
                "type": "string",
                "enum": [
                  "low",
                  "medium",
                  "high"
                ],
                "example": "medium"
              },
              "variants": {
                "type": "object",
                "properties": {
                  "thumbnail": {
                    "type": "string",
                    "example": "https://res.cloudinary.com/demo/image/upload/c_thumb,w_200,h_200/v1612345678/artwork.jpg"
                  },
                  "medium": {
                    "type": "string",
                    "example": "https://res.cloudinary.com/demo/image/upload/c_scale,w_800/v1612345678/artwork.jpg"
                  }
                }
              }
            }
          }
        }
      },
      "RefreshTokenRequest": {
        "type": "object",
        "required": [
          "refreshToken"
        ],
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "Refresh token received during login",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      },
      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "تم تحديث رمز الوصول بنجاح"
          },
          "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              }
            }
          }
        }
      },
      "UpdateProfileRequest": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "example": "أحمد محمد المحدث"
          },
          "bio": {
            "type": "string",
            "maxLength": 500,
            "example": "فنان تشكيلي متخصص في الرسم الزيتي والألوان المائية"
          },
          "job": {
            "type": "string",
            "maxLength": 100,
            "example": "رسام ومصمم جرافيك"
          },
          "location": {
            "type": "string",
            "maxLength": 100,
            "example": "جدة، السعودية"
          },
          "website": {
            "type": "string",
            "format": "uri",
            "example": "https://www.my-new-portfolio.com"
          },
          "socialMedia": {
            "type": "object",
            "properties": {
              "instagram": {
                "type": "string",
                "maxLength": 100,
                "example": "@my_new_instagram"
              },
              "twitter": {
                "type": "string",
                "maxLength": 100,
                "example": "@my_new_twitter"
              },
              "facebook": {
                "type": "string",
                "maxLength": 100,
                "example": "my.new.facebook"
              }
            }
          },
          "profileImage": {
            "type": "string",
            "format": "binary",
            "description": "Profile image file"
          }
        }
      },
      "ChangePasswordRequest": {
        "type": "object",
        "required": [
          "currentPassword",
          "newPassword",
          "confirmPassword"
        ],
        "properties": {
          "currentPassword": {
            "type": "string",
            "format": "password",
            "example": "currentPassword123!"
          },
          "newPassword": {
            "type": "string",
            "format": "password",
            "minLength": 8,
            "pattern": "^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d@$!%*#?&]{8,}$",
            "example": "newPassword123!"
          },
          "confirmPassword": {
            "type": "string",
            "format": "password",
            "example": "newPassword123!"
          }
        }
      },
      "WishlistItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d0fe4f5311236168a109ca"
          },
          "title": {
            "type": "object",
            "properties": {
              "ar": {
                "type": "string",
                "example": "لوحة جميلة"
              },
              "en": {
                "type": "string",
                "example": "Beautiful Painting"
              }
            }
          },
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "price": {
            "type": "number",
            "example": 500
          },
          "currency": {
            "type": "string",
            "example": "SAR"
          },
          "isAvailable": {
            "type": "boolean",
            "example": true
          },
          "artist": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "displayName": {
                "type": "string",
                "example": "أحمد الفنان"
              },
              "profileImage": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              },
              "job": {
                "type": "string",
                "example": "رسام"
              }
            }
          },
          "category": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string",
                "example": "لوحات زيتية"
              }
            }
          },
          "addedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d0fe4f5311236168a109ca"
          },
          "name": {
            "type": "string",
            "properties": {
              "ar": {
                "type": "string",
                "example": "لوحات زيتية"
              },
              "en": {
                "type": "string",
                "example": "Oil Paintings"
              }
            },
            "example": "لوحات زيتية"
          },
          "description": {
            "type": "string",
            "properties": {
              "ar": {
                "type": "string",
                "example": "لوحات مرسومة بالألوان الزيتية"
              },
              "en": {
                "type": "string",
                "example": "Paintings created with oil colors"
              }
            },
            "example": "لوحات مرسومة بالألوان الزيتية"
          },
          "image": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "example": "https://res.cloudinary.com/demo/image/upload/v1612345678/category.jpg"
              },
              "publicId": {
                "type": "string",
                "example": "category_123456"
              },
              "id": {
                "type": "string",
                "example": "demo/category_id"
              }
            }
          },
          "artworkCount": {
            "type": "integer",
            "example": 25
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-15T10:30:45.123Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-15T10:30:45.123Z"
          },
          "recentArtworks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "images": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "price": {
                  "type": "number"
                },
                "artist": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CreateCategoryRequest": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "object",
            "required": [
              "ar",
              "en"
            ],
            "properties": {
              "ar": {
                "type": "string",
                "example": "لوحات زيتية"
              },
              "en": {
                "type": "string",
                "example": "Oil Paintings"
              }
            }
          },
          "description": {
            "type": "object",
            "properties": {
              "ar": {
                "type": "string",
                "example": "لوحات مرسومة بالألوان الزيتية"
              },
              "en": {
                "type": "string",
                "example": "Paintings created with oil colors"
              }
            }
          },
          "image": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "UpdateCategoryRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "object",
            "properties": {
              "ar": {
                "type": "string",
                "example": "لوحات زيتية محدثة"
              },
              "en": {
                "type": "string",
                "example": "Updated Oil Paintings"
              }
            }
          },
          "description": {
            "type": "object",
            "properties": {
              "ar": {
                "type": "string",
                "example": "لوحات مرسومة بالألوان الزيتية المحدثة"
              },
              "en": {
                "type": "string",
                "example": "Updated paintings created with oil colors"
              }
            }
          },
          "image": {
            "type": "string",
            "format": "binary"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "ArtworkResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d0fe4f5311236168a109ca"
          },
          "title": {
            "type": "object",
            "properties": {
              "ar": {
                "type": "string",
                "example": "لوحة فنية جميلة"
              },
              "en": {
                "type": "string",
                "example": "Beautiful Artwork"
              }
            }
          },
          "description": {
            "type": "object",
            "properties": {
              "ar": {
                "type": "string",
                "example": "وصف اللوحة الفنية"
              },
              "en": {
                "type": "string",
                "example": "Artwork description"
              }
            }
          },
          "artist": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "format": "uri",
                  "example": "https://res.cloudinary.com/demo/image/upload/v1612345678/artwork.jpg"
                },
                "publicId": {
                  "type": "string",
                  "example": "artwork_123456"
                },
                "optimizedUrl": {
                  "type": "string",
                  "format": "uri",
                  "example": "https://res.cloudinary.com/demo/image/upload/q_auto,f_auto/v1612345678/artwork.jpg"
                }
              }
            }
          },
          "price": {
            "type": "number",
            "example": 500
          },
          "currency": {
            "type": "string",
            "enum": [
              "SAR",
              "USD",
              "EUR"
            ],
            "example": "SAR"
          },
          "dimensions": {
            "type": "object",
            "properties": {
              "width": {
                "type": "number",
                "example": 50
              },
              "height": {
                "type": "number",
                "example": 70
              },
              "unit": {
                "type": "string",
                "enum": [
                  "cm",
                  "inch",
                  "m"
                ],
                "example": "cm"
              }
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "فن",
              "لوحة",
              "زيتي"
            ]
          },
          "isAvailable": {
            "type": "boolean",
            "example": true
          },
          "viewCount": {
            "type": "integer",
            "example": 150
          },
          "likeCount": {
            "type": "integer",
            "example": 25
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-15T10:30:45.123Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-15T10:30:45.123Z"
          }
        }
      },
      "CreateArtworkRequest": {
        "type": "object",
        "required": [
          "title",
          "description",
          "category",
          "images"
        ],
        "properties": {
          "title": {
            "type": "object",
            "required": [
              "ar"
            ],
            "properties": {
              "ar": {
                "type": "string",
                "example": "لوحة فنية جميلة"
              },
              "en": {
                "type": "string",
                "example": "Beautiful Artwork"
              }
            }
          },
          "description": {
            "type": "object",
            "required": [
              "ar"
            ],
            "properties": {
              "ar": {
                "type": "string",
                "example": "وصف اللوحة الفنية"
              },
              "en": {
                "type": "string",
                "example": "Artwork description"
              }
            }
          },
          "category": {
            "type": "string",
            "example": "60d0fe4f5311236168a109ca"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            },
            "minItems": 1,
            "maxItems": 10
          },
          "price": {
            "type": "number",
            "minimum": 0,
            "example": 500
          },
          "currency": {
            "type": "string",
            "enum": [
              "SAR",
              "USD",
              "EUR"
            ],
            "default": "SAR",
            "example": "SAR"
          },
          "dimensions": {
            "type": "object",
            "properties": {
              "width": {
                "type": "number",
                "minimum": 0,
                "example": 50
              },
              "height": {
                "type": "number",
                "minimum": 0,
                "example": 70
              },
              "unit": {
                "type": "string",
                "enum": [
                  "cm",
                  "inch",
                  "m"
                ],
                "default": "cm",
                "example": "cm"
              }
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "example": [
              "فن",
              "لوحة",
              "زيتي"
            ]
          }
        }
      },
      "ChatResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d0fe4f5311236168a109ca"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResponse"
            }
          },
          "lastMessage": {
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "example": "مرحبا، كيف حالك؟"
              },
              "sender": {
                "type": "string",
                "example": "60d0fe4f5311236168a109ca"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time",
                "example": "2023-05-15T10:30:45.123Z"
              },
              "isRead": {
                "type": "boolean",
                "example": false
              }
            }
          },
          "unreadCount": {
            "type": "integer",
            "example": 3
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-15T10:30:45.123Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-15T10:30:45.123Z"
          }
        }
      },
      "MessageResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d0fe4f5311236168a109ca"
          },
          "chat": {
            "type": "string",
            "example": "60d0fe4f5311236168a109cb"
          },
          "sender": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "content": {
            "type": "string",
            "example": "مرحبا، كيف حالك؟"
          },
          "messageType": {
            "type": "string",
            "enum": [
              "text",
              "image",
              "file"
            ],
            "example": "text"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "format": "uri",
                  "example": "https://res.cloudinary.com/demo/image/upload/v1612345678/message.jpg"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "image",
                    "file"
                  ],
                  "example": "image"
                },
                "filename": {
                  "type": "string",
                  "example": "image.jpg"
                }
              }
            }
          },
          "isRead": {
            "type": "boolean",
            "example": false
          },
          "readBy": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string",
                  "example": "60d0fe4f5311236168a109ca"
                },
                "readAt": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-05-15T10:30:45.123Z"
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-15T10:30:45.123Z"
          }
        }
      },
      "SendMessageRequest": {
        "type": "object",
        "required": [
          "content"
        ],
        "properties": {
          "content": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1000,
            "example": "مرحبا، كيف حالك؟"
          },
          "messageType": {
            "type": "string",
            "enum": [
              "text",
              "image",
              "file"
            ],
            "default": "text",
            "example": "text"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            },
            "maxItems": 5
          }
        }
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d0fe4f5311236168a109ca"
          },
          "displayName": {
            "type": "string",
            "example": "أحمد محمد"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "ahmed@example.com"
          },
          "role": {
            "type": "string",
            "enum": [
              "user",
              "artist"
            ],
            "example": "artist"
          },
          "profileImage": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "example": "https://res.cloudinary.com/demo/image/upload/v1612345678/profile.jpg"
              },
              "publicId": {
                "type": "string",
                "example": "demo/profile_id"
              }
            }
          },
          "bio": {
            "type": "string",
            "example": "فنان تشكيلي متخصص في الرسم الزيتي"
          },
          "job": {
            "type": "string",
            "example": "رسام"
          },
          "location": {
            "type": "string",
            "example": "الرياض، السعودية"
          },
          "website": {
            "type": "string",
            "format": "uri",
            "example": "https://www.artist-portfolio.com"
          },
          "socialMedia": {
            "type": "object",
            "properties": {
              "instagram": {
                "type": "string",
                "example": "@artist_instagram"
              },
              "twitter": {
                "type": "string",
                "example": "@artist_twitter"
              },
              "facebook": {
                "type": "string",
                "example": "artist.facebook"
              }
            }
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "stats": {
            "type": "object",
            "properties": {
              "artworksCount": {
                "type": "integer",
                "example": 15
              },
              "followersCount": {
                "type": "integer",
                "example": 250
              },
              "followingCount": {
                "type": "integer",
                "example": 50
              },
              "wishlistCount": {
                "type": "integer",
                "example": 8
              }
            }
          }
        }
      },
      "ArtistProfile": {
        "type": "object",
        "properties": {
          "artist": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "60d0fe4f5311236168a109ca"
              },
              "displayName": {
                "type": "string",
                "example": "أحمد الفنان"
              },
              "email": {
                "type": "string",
                "format": "email",
                "example": "artist@example.com"
              },
              "profileImage": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              },
              "coverImage": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              },
              "bio": {
                "type": "string",
                "example": "فنان تشكيلي متخصص في الرسم الزيتي"
              },
              "job": {
                "type": "string",
                "example": "رسام"
              },
              "location": {
                "type": "string",
                "example": "الرياض، السعودية"
              },
              "website": {
                "type": "string",
                "format": "uri"
              },
              "socialMedia": {
                "type": "object",
                "properties": {
                  "instagram": {
                    "type": "string"
                  },
                  "twitter": {
                    "type": "string"
                  },
                  "facebook": {
                    "type": "string"
                  }
                }
              },
              "joinDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "stats": {
            "type": "object",
            "properties": {
              "followersCount": {
                "type": "integer",
                "example": 250
              },
              "artworksCount": {
                "type": "integer",
                "example": 15
              },
              "salesCount": {
                "type": "integer",
                "example": 8
              },
              "rating": {
                "type": "number",
                "format": "float",
                "example": 4.5
              },
              "reviewsCount": {
                "type": "integer",
                "example": 12
              }
            }
          },
          "recentArtworks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArtworkSummary"
            }
          },
          "isFollowing": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "ArtistSummary": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d0fe4f5311236168a109ca"
          },
          "displayName": {
            "type": "string",
            "example": "أحمد الفنان"
          },
          "profileImage": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "example": "https://res.cloudinary.com/demo/image/upload/v1612345678/profile.jpg"
              }
            }
          },
          "job": {
            "type": "string",
            "example": "رسام"
          },
          "bio": {
            "type": "string",
            "example": "فنان موهوب"
          },
          "rating": {
            "type": "number",
            "format": "float",
            "example": 4.5
          },
          "reviewsCount": {
            "type": "integer",
            "example": 10
          },
          "artworksCount": {
            "type": "integer",
            "example": 15
          }
        }
      },
      "ArtworkSummary": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d0fe4f5311236168a109ca"
          },
          "title": {
            "type": "object",
            "properties": {
              "ar": {
                "type": "string",
                "example": "لوحة جميلة"
              },
              "en": {
                "type": "string",
                "example": "Beautiful Painting"
              }
            }
          },
          "description": {
            "type": "object",
            "properties": {
              "ar": {
                "type": "string",
                "example": "لوحة زيتية جميلة تعبر عن الطبيعة"
              },
              "en": {
                "type": "string",
                "example": "Beautiful oil painting depicting nature"
              }
            }
          },
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "format": "uri",
                  "example": "https://res.cloudinary.com/demo/image/upload/v1612345678/artwork.jpg"
                },
                "publicId": {
                  "type": "string",
                  "example": "demo/artwork_id"
                }
              }
            }
          },
          "price": {
            "type": "number",
            "example": 500
          },
          "currency": {
            "type": "string",
            "example": "SAR"
          },
          "dimensions": {
            "type": "object",
            "properties": {
              "width": {
                "type": "number",
                "example": 100
              },
              "height": {
                "type": "number",
                "example": 80
              },
              "unit": {
                "type": "string",
                "example": "cm"
              }
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "فن",
              "لوحة",
              "زيتي"
            ]
          },
          "viewCount": {
            "type": "integer",
            "example": 50
          },
          "likeCount": {
            "type": "integer",
            "example": 25
          },
          "isAvailable": {
            "type": "boolean",
            "example": true
          },
          "artist": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "60d0fe4f5311236168a109ca"
              },
              "displayName": {
                "type": "string",
                "example": "أحمد الفنان"
              },
              "profileImage": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              },
              "job": {
                "type": "string",
                "example": "رسام"
              }
            }
          },
          "category": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "60d0fe4f5311236168a109ca"
              },
              "name": {
                "type": "string",
                "example": "لوحات زيتية"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CategorySummary": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d0fe4f5311236168a109ca"
          },
          "name": {
            "type": "string",
            "example": "لوحات زيتية"
          },
          "image": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "example": "https://res.cloudinary.com/demo/image/upload/v1612345678/category.jpg"
              }
            }
          }
        }
      },
      "NotificationSettings": {
        "type": "object",
        "properties": {
          "pushNotifications": {
            "type": "boolean",
            "example": true
          },
          "emailNotifications": {
            "type": "boolean",
            "example": true
          },
          "messageNotifications": {
            "type": "boolean",
            "example": true
          },
          "followNotifications": {
            "type": "boolean",
            "example": true
          },
          "artworkNotifications": {
            "type": "boolean",
            "example": true
          },
          "marketingNotifications": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "UpdateNotificationSettings": {
        "type": "object",
        "required": [
          "notificationSettings"
        ],
        "properties": {
          "notificationSettings": {
            "$ref": "#/components/schemas/NotificationSettings"
          }
        }
      },
      "PaginationResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "example": 1
          },
          "totalPages": {
            "type": "integer",
            "example": 5
          },
          "totalItems": {
            "type": "integer",
            "example": 50
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "Artwork": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "معرف العمل الفني"
          },
          "title": {
            "type": "string",
            "description": "عنوان العمل الفني"
          },
          "description": {
            "type": "string",
            "description": "وصف العمل الفني"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "روابط صور العمل الفني"
          },
          "price": {
            "type": "number",
            "description": "سعر العمل الفني"
          },
          "status": {
            "type": "string",
            "enum": [
              "available",
              "sold",
              "reserved"
            ],
            "description": "حالة العمل الفني"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "وسوم العمل الفني"
          },
          "viewCount": {
            "type": "number",
            "description": "عدد المشاهدات"
          },
          "isFramed": {
            "type": "boolean",
            "description": "هل العمل مؤطر"
          },
          "dimensions": {
            "type": "object",
            "properties": {
              "width": {
                "type": "number"
              },
              "height": {
                "type": "number"
              },
              "depth": {
                "type": "number"
              }
            }
          },
          "materials": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "المواد المستخدمة"
          },
          "artist": {
            "$ref": "#/components/schemas/ArtistInfo"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryInfo"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ArtistInfo": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "profileImage": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          },
          "stats": {
            "type": "object",
            "properties": {
              "totalArtworks": {
                "type": "number"
              },
              "avgRating": {
                "type": "number"
              },
              "totalReviews": {
                "type": "number"
              }
            }
          }
        }
      },
      "CategoryInfo": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": [
          "email",
          "password",
          "confirmPassword",
          "displayName"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 8,
            "example": "Password123!"
          },
          "confirmPassword": {
            "type": "string",
            "format": "password",
            "example": "Password123!"
          },
          "displayName": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "example": "مريم فوزي"
          },
          "job": {
            "type": "string",
            "minLength": 2,
            "maxLength": 100,
            "example": "فنانة تشكيلية"
          },
          "role": {
            "type": "string",
            "enum": [
              "user",
              "artist"
            ],
            "default": "user",
            "example": "artist"
          },
          "fingerprint": {
            "type": "string",
            "minLength": 10,
            "maxLength": 500,
            "description": "Optional device fingerprint for passwordless login",
            "example": "fp_1234567890abcdef_browser_chrome_os_windows"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "Password123!"
          }
        }
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          }
        }
      },
      "VerifyCodeRequest": {
        "type": "object",
        "required": [
          "email",
          "forgetCode"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "forgetCode": {
            "type": "string",
            "pattern": "^\\d{4}$",
            "example": "1234"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "تم تسجيل الدخول بنجاح"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "60d0fe4f5311236168a109ca"
              },
              "email": {
                "type": "string",
                "format": "email",
                "example": "user@example.com"
              },
              "displayName": {
                "type": "string",
                "example": "مريم فوزي"
              },
              "role": {
                "type": "string",
                "enum": [
                  "user",
                  "artist"
                ],
                "example": "artist"
              },
              "profileImage": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://res.cloudinary.com/demo/image/upload/v1612345678/profile.jpg"
                  }
                }
              },
              "isVerified": {
                "type": "boolean",
                "example": true
              },
              "accessToken": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              },
              "refreshToken": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              }
            }
          }
        }
      },
      "CategoryStats": {
        "type": "object",
        "properties": {
          "totalCategories": {
            "type": "integer",
            "example": 15
          },
          "emptyCategoriesCount": {
            "type": "integer",
            "example": 3
          },
          "recentCategoriesCount": {
            "type": "integer",
            "example": 5
          },
          "averageArtworksPerCategory": {
            "type": "integer",
            "example": 12
          },
          "mostPopularCategories": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "artworkCount": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "CategoryResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "تم جلب التصنيفات بنجاح"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Category"
              },
              {
                "type": "object",
                "properties": {
                  "categories": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Category"
                    }
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/PaginationResponse"
                  }
                }
              },
              {
                "$ref": "#/components/schemas/CategoryStats"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            ]
          }
        }
      },
      "Chat": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "معرف المحادثة"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "description": "المشاركون في المحادثة"
          },
          "lastMessage": {
            "$ref": "#/components/schemas/Message"
          },
          "unreadCount": {
            "type": "number",
            "description": "عدد الرسائل غير المقروءة"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "معرف الرسالة"
          },
          "chat": {
            "type": "string",
            "description": "معرف المحادثة"
          },
          "sender": {
            "$ref": "#/components/schemas/User"
          },
          "content": {
            "type": "string",
            "description": "محتوى الرسالة"
          },
          "messageType": {
            "type": "string",
            "enum": [
              "text",
              "image",
              "file"
            ],
            "default": "text",
            "description": "نوع الرسالة"
          },
          "readBy": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string"
                },
                "readAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "FollowUser": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d0fe4f5311236168a109ca"
          },
          "displayName": {
            "type": "string",
            "example": "أحمد محمد"
          },
          "profileImage": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "job": {
            "type": "string",
            "example": "فنان تشكيلي"
          },
          "bio": {
            "type": "string",
            "example": "رسام محترف متخصص في اللوحات الزيتية"
          },
          "followedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-15T10:30:45.123Z"
          }
        }
      },
      "FollowStats": {
        "type": "object",
        "properties": {
          "artistId": {
            "type": "string",
            "example": "60d0fe4f5311236168a109ca"
          },
          "artistName": {
            "type": "string",
            "example": "أحمد محمد"
          },
          "followersCount": {
            "type": "integer",
            "example": 150
          },
          "followingCount": {
            "type": "integer",
            "example": 75
          },
          "recentFollowersCount": {
            "type": "integer",
            "example": 12
          },
          "recentFollowers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                },
                "profileImage": {
                  "type": "object"
                },
                "followedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "memberSince": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-15T10:30:45.123Z"
          }
        }
      },
      "FollowResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "تمت المتابعة بنجاح"
          },
          "data": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "artistId": {
                    "type": "string"
                  },
                  "artistName": {
                    "type": "string"
                  },
                  "followedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isFollowing": {
                    "type": "boolean"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "followed",
                      "unfollowed"
                    ]
                  },
                  "artistId": {
                    "type": "string"
                  },
                  "artistName": {
                    "type": "string"
                  },
                  "isFollowing": {
                    "type": "boolean"
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "followers": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FollowUser"
                    }
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/PaginationResponse"
                  }
                }
              },
              {
                "$ref": "#/components/schemas/FollowStats"
              }
            ]
          }
        }
      },
      "Banner": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string",
            "format": "uri"
          },
          "linkType": {
            "type": "string",
            "enum": [
              "artwork",
              "artist",
              "category",
              "external"
            ]
          },
          "linkId": {
            "type": "string"
          },
          "externalUrl": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "Image": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "معرف الصورة"
          },
          "title": {
            "type": "string",
            "description": "عنوان الصورة"
          },
          "description": {
            "type": "string",
            "description": "وصف الصورة"
          },
          "url": {
            "type": "string",
            "description": "رابط الصورة"
          },
          "publicId": {
            "type": "string",
            "description": "معرف الصورة في Cloudinary"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "وسوم الصورة"
          },
          "size": {
            "type": "number",
            "description": "حجم الصورة بالبايت"
          },
          "format": {
            "type": "string",
            "description": "تنسيق الصورة"
          },
          "width": {
            "type": "number",
            "description": "عرض الصورة"
          },
          "height": {
            "type": "number",
            "description": "ارتفاع الصورة"
          },
          "views": {
            "type": "number",
            "description": "عدد المشاهدات"
          },
          "downloads": {
            "type": "number",
            "description": "عدد التحميلات"
          },
          "isPrivate": {
            "type": "boolean",
            "description": "هل الصورة خاصة"
          },
          "allowDownload": {
            "type": "boolean",
            "description": "السماح بالتحميل"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtained from login or registration"
      },
      "FirebaseAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Firebase ID token obtained from Firebase Authentication"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "غير مصرح - المصادقة مطلوبة",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "غير مصرح بالوصول"
                },
                "error": {
                  "type": "string",
                  "example": "رمز المصادقة غير صالح أو منتهي الصلاحية"
                },
                "status": {
                  "type": "integer",
                  "example": 401
                }
              }
            }
          }
        }
      },
      "BadRequestError": {
        "description": "طلب غير صالح - مشكلة في البيانات المرسلة",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "بيانات غير صالحة"
                },
                "error": {
                  "type": "string",
                  "example": "حقل البريد الإلكتروني مطلوب"
                },
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "validationErrors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string",
                        "example": "email"
                      },
                      "message": {
                        "type": "string",
                        "example": "يجب إدخال بريد إلكتروني صالح"
                      }
                    }
                  },
                  "example": [
                    {
                      "field": "email",
                      "message": "يجب إدخال بريد إلكتروني صالح"
                    },
                    {
                      "field": "password",
                      "message": "كلمة المرور يجب أن تكون 8 أحرف على الأقل"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "NotFoundError": {
        "description": "غير موجود - المورد المطلوب غير متاح",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "المورد غير موجود"
                },
                "error": {
                  "type": "string",
                  "example": "لم يتم العثور على العنصر بالمعرف المحدد"
                },
                "status": {
                  "type": "integer",
                  "example": 404
                }
              }
            }
          }
        }
      },
      "ServerError": {
        "description": "خطأ في الخادم - فشل في معالجة الطلب",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "خطأ داخلي في الخادم"
                },
                "error": {
                  "type": "string",
                  "example": "فشل في الاتصال بقاعدة البيانات"
                },
                "status": {
                  "type": "integer",
                  "example": 500
                }
              }
            }
          }
        }
      },
      "ForbiddenError": {
        "description": "محظور - ليس لديك صلاحية الوصول إلى هذا المورد",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "غير مسموح بالوصول"
                },
                "error": {
                  "type": "string",
                  "example": "لا تملك الصلاحية للوصول إلى هذا المورد"
                },
                "status": {
                  "type": "integer",
                  "example": 403
                }
              }
            }
          }
        }
      }
    },
    "examples": {
      "RegistrationSuccess": {
        "value": {
          "success": true,
          "message": "تم إنشاء الحساب بنجاح",
          "data": {
            "user": {
              "_id": "64a2f9d5ea39e815b8f35f0e",
              "email": "artist@example.com",
              "displayName": "فنان مبدع",
              "role": "artist",
              "profileImage": "https://res.cloudinary.com/demo/image/upload/v1612345678/profile.jpg",
              "preferredLanguage": "ar"
            },
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "status": 201,
          "timestamp": "2023-06-15T10:30:45.123Z",
          "requestId": "req-123abc456"
        }
      },
      "LoginSuccess": {
        "value": {
          "success": true,
          "message": "تم تسجيل الدخول بنجاح",
          "data": {
            "user": {
              "_id": "64a2f9d5ea39e815b8f35f0e",
              "email": "artist@example.com",
              "displayName": "فنان مبدع",
              "role": "artist",
              "profileImage": "https://res.cloudinary.com/demo/image/upload/v1612345678/profile.jpg",
              "preferredLanguage": "ar"
            },
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "status": 200,
          "timestamp": "2023-06-15T10:30:45.123Z",
          "requestId": "req-123abc456"
        }
      },
      "ValidationError": {
        "value": {
          "success": false,
          "message": "خطأ في البيانات المدخلة",
          "error": "البريد الإلكتروني مطلوب",
          "status": 400,
          "validationErrors": [
            {
              "field": "email",
              "message": "يجب إدخال بريد إلكتروني صالح"
            },
            {
              "field": "password",
              "message": "كلمة المرور يجب أن تكون 8 أحرف على الأقل"
            }
          ],
          "timestamp": "2023-06-15T10:30:45.123Z",
          "requestId": "req-123abc456"
        }
      },
      "ImageUploadSuccess": {
        "value": {
          "success": true,
          "message": "تم رفع الصورة بنجاح",
          "data": {
            "_id": "64a2f9d5ea39e815b8f35f0e",
            "url": "https://res.cloudinary.com/demo/image/upload/v1612345678/artwork.jpg",
            "publicId": "artwork_123456",
            "title": {
              "ar": "لوحة فنية جميلة",
              "en": "Beautiful Artwork"
            },
            "optimizedUrl": "https://res.cloudinary.com/demo/image/upload/q_auto,f_auto/v1612345678/artwork.jpg",
            "variants": {
              "thumbnail": "https://res.cloudinary.com/demo/image/upload/c_thumb,w_200,h_200/v1612345678/artwork.jpg",
              "small": "https://res.cloudinary.com/demo/image/upload/c_scale,w_400/v1612345678/artwork.jpg",
              "medium": "https://res.cloudinary.com/demo/image/upload/c_scale,w_800/v1612345678/artwork.jpg"
            }
          },
          "status": 201,
          "timestamp": "2023-06-15T10:30:45.123Z",
          "requestId": "req-123abc456"
        }
      },
      "NotFoundError": {
        "value": {
          "success": false,
          "message": "العنصر غير موجود",
          "error": "لم يتم العثور على صورة بهذا المعرف",
          "status": 404,
          "timestamp": "2023-06-15T10:30:45.123Z",
          "requestId": "req-123abc456"
        }
      },
      "ServerError": {
        "value": {
          "success": false,
          "message": "خطأ في الخادم",
          "error": "حدث خطأ أثناء الاتصال بالخدمة الخارجية",
          "status": 500,
          "timestamp": "2023-06-15T10:30:45.123Z",
          "requestId": "req-123abc456"
        }
      },
      "UserLoginSuccess": {
        "value": {
          "success": true,
          "message": "تم تسجيل الدخول بنجاح",
          "data": {
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZDIxYjQ2NjdkMGQ4OTkyZTYxMGM4NSIsImVtYWlsIjoidXNlckBleGFtcGxlLmNvbSIsImlhdCI6MTYyMzQ1Njc4OSwiZXhwIjoxNjIzNTQzMTg5fQ.K2j3iq4NpCN1NWIXIo0JLc1s8a0n3uY4f5YJJXiSN5Q",
            "user": {
              "_id": "60d21b4667d0d8992e610c85",
              "email": "user@example.com",
              "displayName": "أحمد محمد",
              "role": "artist"
            }
          },
          "status": 200,
          "timestamp": "2023-06-12T08:15:30.123Z"
        }
      },
      "LoginInvalidCredentials": {
        "value": {
          "success": false,
          "message": "البريد الإلكتروني أو كلمة المرور غير صحيحة",
          "status": 401,
          "timestamp": "2023-06-12T08:16:30.123Z"
        }
      },
      "NotificationsList": {
        "value": {
          "success": true,
          "message": "تم جلب الإشعارات بنجاح",
          "data": {
            "notifications": [
              {
                "_id": "60d21b4667d0d8992e610c85",
                "title": "لديك رسالة جديدة",
                "message": "أرسل لك محمد رسالة جديدة",
                "type": "message",
                "isRead": false,
                "data": {
                  "screen": "ChatScreen",
                  "id": "60d21b4667d0d8992e610c85"
                },
                "createdAt": "2023-06-12T07:30:45.123Z"
              },
              {
                "_id": "60d21b4667d0d8992e610c86",
                "title": "تم نشر عملك الفني بنجاح",
                "message": "تم نشر عملك الفني \"لوحة زهور زرقاء\" بنجاح",
                "type": "artwork",
                "isRead": true,
                "data": {
                  "screen": "ArtworkDetailScreen",
                  "id": "60d21b4667d0d8992e610c90"
                },
                "createdAt": "2023-06-11T15:20:30.123Z"
              }
            ],
            "pagination": {
              "currentPage": 1,
              "totalPages": 5,
              "totalItems": 25,
              "unreadCount": 3
            }
          },
          "status": 200,
          "timestamp": "2023-06-12T08:15:30.123Z"
        }
      }
    },
    "parameters": {
      "languageParam": {
        "name": "language",
        "in": "query",
        "description": "اللغة المطلوبة للمحتوى (ar للعربية، en للإنجليزية)",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "ar",
            "en"
          ],
          "default": "ar"
        }
      },
      "pageParam": {
        "name": "page",
        "in": "query",
        "description": "رقم الصفحة للتصفح",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 1,
          "minimum": 1
        }
      },
      "limitParam": {
        "name": "limit",
        "in": "query",
        "description": "عدد العناصر في الصفحة",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 20,
          "minimum": 1,
          "maximum": 100
        }
      },
      "optimizationLevelParam": {
        "name": "optimizationLevel",
        "in": "query",
        "description": "مستوى تحسين الصور (low, medium, high)",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "low",
            "medium",
            "high"
          ],
          "default": "medium"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "واجهات API للمصادقة وإدارة المستخدمين",
      "x-displayName": "المصادقة"
    },
    {
      "name": "Images",
      "description": "واجهات API لرفع وإدارة الصور",
      "x-displayName": "الصور"
    },
    {
      "name": "Artworks",
      "description": "واجهات API لإدارة الأعمال الفنية",
      "x-displayName": "الأعمال الفنية"
    },
    {
      "name": "Chat",
      "description": "واجهات API للمحادثات والرسائل",
      "x-displayName": "المحادثات"
    },
    {
      "name": "Categories",
      "description": "واجهات API لإدارة التصنيفات",
      "x-displayName": "التصنيفات"
    },
    {
      "name": "Reviews",
      "description": "واجهات API للتقييمات والمراجعات",
      "x-displayName": "التقييمات"
    },
    {
      "name": "Home",
      "description": "واجهات API للشاشة الرئيسية",
      "x-displayName": "الرئيسية"
    },
    {
      "name": "Special Requests",
      "description": "واجهات API لإدارة الطلبات الخاصة",
      "x-displayName": "الطلبات الخاصة"
    },
    {
      "name": "Reports",
      "description": "واجهات API لنظام الإبلاغ عن المحتوى",
      "x-displayName": "البلاغات"
    },
    {
      "name": "Transactions",
      "description": "واجهات API للمعاملات المالية والدفع",
      "x-displayName": "المعاملات المالية"
    },
    {
      "name": "Follow",
      "description": "واجهات API لمتابعة/إلغاء متابعة الفنانين",
      "x-displayName": "المتابعة"
    },
    {
      "name": "Notifications",
      "description": "واجهات API لإدارة إشعارات المستخدم",
      "x-displayName": "الإشعارات"
    },
    {
      "name": "Profile",
      "description": "واجهات API لإدارة الملفات الشخصية",
      "x-displayName": "الملف الشخصي"
    }
  ],
  "x-tagGroups": [
    {
      "name": "الشاشات الرئيسية",
      "tags": [
        "Authentication",
        "Home",
        "Profile",
        "Artworks",
        "Images"
      ]
    },
    {
      "name": "التواصل",
      "tags": [
        "Chat",
        "Notifications",
        "Follow"
      ]
    },
    {
      "name": "المعاملات",
      "tags": [
        "Transactions",
        "Special Requests"
      ]
    },
    {
      "name": "المحتوى",
      "tags": [
        "Categories",
        "Reviews",
        "Reports"
      ]
    },
    {
      "name": "الإدارة",
      "tags": [
        "Profile"
      ]
    }
  ],
  "paths": {
    "/artworks": {
      "get": {
        "tags": [
          "Artwork"
        ],
        "summary": "Get all artworks",
        "description": "Get a paginated list of artworks with optional filtering",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            },
            "description": "Items per page"
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "Filter by category ID"
          },
          {
            "in": "query",
            "name": "artist",
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "Filter by artist ID"
          },
          {
            "in": "query",
            "name": "minPrice",
            "schema": {
              "type": "number",
              "minimum": 0
            },
            "description": "Minimum price filter"
          },
          {
            "in": "query",
            "name": "maxPrice",
            "schema": {
              "type": "number",
              "minimum": 0
            },
            "description": "Maximum price filter"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "available",
                "sold",
                "reserved"
              ]
            },
            "description": "Filter by status"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 100
            },
            "description": "Search in title and description"
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "enum": [
                "createdAt",
                "price",
                "title",
                "views"
              ],
              "default": "createdAt"
            },
            "description": "Sort field"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "description": "Sort order"
          }
        ],
        "responses": {
          "200": {
            "description": "Artworks retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "artworks": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Artwork"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/PaginationMeta"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Artwork"
        ],
        "summary": "Create new artwork",
        "description": "Create a new artwork (artists only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateArtworkRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Artwork created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم إنشاء العمل الفني بنجاح"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Artwork"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "Only artists can create artworks"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/artworks/search": {
      "get": {
        "tags": [
          "Artwork"
        ],
        "summary": "Search artworks",
        "description": "Search for artworks by title, description, or tags",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 100
            },
            "description": "Search query"
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "Filter by category"
          },
          {
            "in": "query",
            "name": "minPrice",
            "schema": {
              "type": "number",
              "minimum": 0
            },
            "description": "Minimum price"
          },
          {
            "in": "query",
            "name": "maxPrice",
            "schema": {
              "type": "number",
              "minimum": 0
            },
            "description": "Maximum price"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of artworks matching the search criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "artworks": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Artwork"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/PaginationMeta"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid search query"
          }
        }
      }
    },
    "/artworks/{id}": {
      "get": {
        "tags": [
          "Artwork"
        ],
        "summary": "Get a single artwork by ID",
        "description": "Get detailed information about a specific artwork",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "Artwork ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Artwork details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Artwork"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Artwork not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Artwork"
        ],
        "summary": "Update artwork",
        "description": "Update an existing artwork (owner only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateArtworkRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Artwork updated successfully"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "Only artwork owner can update"
          },
          "404": {
            "description": "Artwork not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Artwork"
        ],
        "summary": "Delete artwork",
        "description": "Delete an artwork (owner only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artwork deleted successfully"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "Only artwork owner can delete"
          },
          "404": {
            "description": "Artwork not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/artworks/{id}/favorite": {
      "post": {
        "tags": [
          "Artwork"
        ],
        "summary": "Toggle artwork favorite",
        "description": "Add or remove artwork from favorites",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Favorite status toggled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "added",
                        "removed"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Artwork not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/artworks/{id}/reviews": {
      "post": {
        "tags": [
          "Artwork"
        ],
        "summary": "Add artwork review",
        "description": "Add a review and rating for an artwork",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "rating"
                ],
                "properties": {
                  "rating": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 5,
                    "description": "Rating from 1 to 5"
                  },
                  "comment": {
                    "type": "string",
                    "maxLength": 500,
                    "description": "Review comment"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Review added successfully"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Artwork not found"
          },
          "409": {
            "description": "User already reviewed this artwork"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Artwork"
        ],
        "summary": "Get artwork reviews",
        "description": "Get all reviews for a specific artwork",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reviews retrieved successfully"
          },
          "404": {
            "description": "Artwork not found"
          }
        }
      }
    },
    "/artworks/artist/{artistId}": {
      "get": {
        "tags": [
          "Artwork"
        ],
        "summary": "Get artworks by artist",
        "description": "Get all artworks created by a specific artist",
        "parameters": [
          {
            "in": "path",
            "name": "artistId",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "available",
                "sold",
                "reserved"
              ]
            },
            "description": "Filter by status"
          }
        ],
        "responses": {
          "200": {
            "description": "Artist artworks retrieved successfully"
          },
          "404": {
            "description": "Artist not found"
          }
        }
      }
    },
    "/artworks/my-artworks": {
      "get": {
        "tags": [
          "Artwork"
        ],
        "summary": "Get my artworks",
        "description": "Get all artworks created by the authenticated user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "available",
                "sold",
                "reserved"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User artworks retrieved successfully"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Authentication"
        ],
        "description": "Create a new user account with email and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "كلمة المرور وتأكيدها غير متطابقين"
                    },
                    "errorCode": {
                      "type": "string",
                      "example": "VALIDATION_ERROR"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "البريد الإلكتروني مستخدم بالفعل"
                    },
                    "errorCode": {
                      "type": "string",
                      "example": "DUPLICATE_ENTITY"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login user",
        "tags": [
          "Authentication"
        ],
        "description": "Authenticate user with email and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "البريد الإلكتروني أو كلمة المرور غير صحيحة"
                    },
                    "errorCode": {
                      "type": "string",
                      "example": "INVALID_PASSWORD"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Account disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "تم تعطيل هذا الحساب"
                    },
                    "errorCode": {
                      "type": "string",
                      "example": "ACCESS_DENIED"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login-with-fingerprint": {
      "post": {
        "summary": "Login with device fingerprint",
        "tags": [
          "Authentication"
        ],
        "description": "Authenticate user using device fingerprint for passwordless login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "fingerprint"
                ],
                "properties": {
                  "fingerprint": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 500,
                    "description": "Unique device fingerprint",
                    "example": "fp_1234567890abcdef_browser_chrome_os_windows"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing fingerprint",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "بصمة الجهاز مطلوبة"
                    },
                    "errorCode": {
                      "type": "string",
                      "example": "VALIDATION_ERROR"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Account disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "تم تعطيل هذا الحساب"
                    },
                    "errorCode": {
                      "type": "string",
                      "example": "ACCESS_DENIED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Device not registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "لم يتم العثور على حساب مرتبط بهذا الجهاز"
                    },
                    "errorCode": {
                      "type": "string",
                      "example": "NOT_FOUND"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/update-fingerprint": {
      "post": {
        "summary": "Update device fingerprint",
        "tags": [
          "Authentication"
        ],
        "description": "Update or set device fingerprint for passwordless login",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "fingerprint"
                ],
                "properties": {
                  "fingerprint": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 500,
                    "description": "Unique device fingerprint",
                    "example": "fp_1234567890abcdef_browser_chrome_os_windows"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Fingerprint updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم تحديث بصمة الجهاز بنجاح"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "fingerprint": {
                          "type": "string",
                          "example": "fp_1234567890abcdef_browser_chrome_os_windows"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing fingerprint",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "بصمة الجهاز مطلوبة"
                    },
                    "errorCode": {
                      "type": "string",
                      "example": "VALIDATION_ERROR"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "يجب تسجيل الدخول أولاً"
                    },
                    "errorCode": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Fingerprint already in use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "بصمة الجهاز مستخدمة بالفعل من قبل مستخدم آخر"
                    },
                    "errorCode": {
                      "type": "string",
                      "example": "CONFLICT"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/firebase": {
      "post": {
        "summary": "Login with Firebase token",
        "tags": [
          "Authentication"
        ],
        "description": "Authenticate user with Firebase ID token.\nThis endpoint allows clients to login using a Firebase ID token.\nIf the user doesn't exist, a new account will be created automatically.\n",
        "security": [
          {
            "FirebaseAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Firebase token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "رمز المصادقة غير صالح"
                    },
                    "errorCode": {
                      "type": "string",
                      "example": "FIREBASE_ERROR"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/forgot-password": {
      "post": {
        "summary": "Request password reset",
        "tags": [
          "Authentication"
        ],
        "description": "Send password reset code to user's email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset code sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم إرسال رمز إعادة تعيين كلمة المرور إلى بريدك الإلكتروني"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Email not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "لا يوجد حساب مرتبط بهذا البريد الإلكتروني"
                    },
                    "errorCode": {
                      "type": "string",
                      "example": "NOT_FOUND"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/verify-forget-code": {
      "post": {
        "summary": "Verify password reset code",
        "tags": [
          "Authentication"
        ],
        "description": "Verify the 4-digit code sent to user's email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyCodeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Code verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم التحقق من الرمز بنجاح"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired code",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "الرمز غير صحيح أو منتهي الصلاحية"
                    },
                    "errorCode": {
                      "type": "string",
                      "example": "INVALID_TOKEN"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/reset-password": {
      "post": {
        "summary": "Reset password",
        "tags": [
          "Authentication"
        ],
        "description": "Reset user password using verified code",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم إعادة تعيين كلمة المرور بنجاح"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or code not verified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "لم يتم التحقق من رمز إعادة التعيين"
                    },
                    "errorCode": {
                      "type": "string",
                      "example": "VALIDATION_ERROR"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh-token": {
      "post": {
        "summary": "Refresh access token",
        "tags": [
          "Authentication"
        ],
        "description": "Get new access token using refresh token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم تحديث رمز الوصول بنجاح"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        },
                        "refreshToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid or expired refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "رمز التحديث غير صالح أو منتهي الصلاحية"
                    },
                    "errorCode": {
                      "type": "string",
                      "example": "INVALID_TOKEN"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "summary": "Get current user profile",
        "tags": [
          "Authentication"
        ],
        "description": "Get the profile of the currently authenticated user",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "FirebaseAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم جلب بيانات المستخدم بنجاح"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "لم يتم توفير رمز المصادقة"
                    },
                    "errorCode": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "Logout user",
        "tags": [
          "Authentication"
        ],
        "description": "Invalidate current access token or specific refresh token",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "description": "Specific refresh token to invalidate (optional)",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم تسجيل الخروج بنجاح"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "لم يتم توفير رمز المصادقة"
                    },
                    "errorCode": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/categories/popular": {
      "get": {
        "summary": "جلب التصنيفات الشائعة",
        "tags": [
          "Categories"
        ],
        "description": "جلب التصنيفات الأكثر شعبية مع عدد الأعمال الفنية.\nمخصص للشاشة الرئيسية في التطبيق المحمول.\n",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 20,
              "default": 8
            },
            "description": "عدد التصنيفات المطلوب جلبها",
            "example": 8
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب التصنيفات الشائعة بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم جلب التصنيفات الشائعة بنجاح"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Category"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "artworkCount": {
                                "type": "integer",
                                "example": 25
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-screen": "HomeScreen"
      }
    },
    "/api/categories/stats": {
      "get": {
        "summary": "جلب إحصائيات التصنيفات",
        "tags": [
          "Categories"
        ],
        "description": "جلب إحصائيات شاملة عن التصنيفات مثل العدد الإجمالي،\nالتصنيفات الأكثر شعبية، والتصنيفات الحديثة.\n",
        "responses": {
          "200": {
            "description": "تم جلب إحصائيات التصنيفات بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم جلب إحصائيات التصنيفات بنجاح"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CategoryStats"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-screen": "AdminPanel"
      }
    },
    "/api/categories": {
      "get": {
        "summary": "جلب جميع التصنيفات",
        "tags": [
          "Categories"
        ],
        "description": "جلب قائمة مقسمة من التصنيفات مع إمكانية البحث.\nيمكن تضمين إحصائيات الأعمال الفنية لكل تصنيف.\n",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "رقم الصفحة",
            "example": 1
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "عدد التصنيفات في الصفحة",
            "example": 10
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50
            },
            "description": "نص البحث في اسم أو وصف التصنيف",
            "example": "لوحات"
          },
          {
            "in": "query",
            "name": "includeStats",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "default": "false"
            },
            "description": "تضمين عدد الأعمال الفنية لكل تصنيف",
            "example": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب التصنيفات بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم جلب التصنيفات بنجاح"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "categories": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Category"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/PaginationResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-screen": "CategoriesScreen"
      },
      "post": {
        "summary": "إنشاء تصنيف جديد",
        "tags": [
          "Categories"
        ],
        "description": "إنشاء تصنيف جديد للأعمال الفنية.\nيتطلب صلاحيات المدير أو المشرف.\n",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "تم إنشاء التصنيف بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم إنشاء التصنيف بنجاح"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Category"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "409": {
            "description": "يوجد تصنيف بنفس هذا الاسم بالفعل",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "يوجد تصنيف بنفس هذا الاسم بالفعل"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-screen": "AdminPanel"
      }
    },
    "/chat": {
      "get": {
        "summary": "Get user chats",
        "tags": [
          "Chat"
        ],
        "description": "Get paginated list of user chats",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Chats retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/chat/create": {
      "post": {
        "summary": "Get or create chat with user",
        "tags": [
          "Chat"
        ],
        "description": "Get existing chat or create new chat with another user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "otherUserId"
                ],
                "properties": {
                  "otherUserId": {
                    "type": "string",
                    "description": "ID of the user to chat with"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat created or retrieved successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/chat/{chatId}/messages": {
      "get": {
        "summary": "Get chat messages",
        "tags": [
          "Chat"
        ],
        "description": "Get paginated list of messages in a chat",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Chat ID"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 50
            },
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Messages retrieved successfully"
          },
          "404": {
            "description": "Chat not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/chat/{chatId}/send": {
      "post": {
        "summary": "Send message",
        "tags": [
          "Chat"
        ],
        "description": "Send a message in a chat",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Chat ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "content"
                ],
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "Message content",
                    "minLength": 1,
                    "maxLength": 1000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Chat not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/chat/{chatId}": {
      "delete": {
        "summary": "Delete chat",
        "tags": [
          "Chat"
        ],
        "description": "Delete a chat (soft delete)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "chatId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Chat ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Chat deleted successfully"
          },
          "404": {
            "description": "Chat not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/chat/socket-token": {
      "get": {
        "tags": [
          "Chat"
        ],
        "summary": "Get socket connection token",
        "description": "Get a temporary token for Socket.io connection",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Socket token generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "description": "Socket connection token"
                        },
                        "userId": {
                          "type": "string",
                          "description": "User ID"
                        },
                        "expiresAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Token expiration time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/follow/toggle": {
      "post": {
        "summary": "Toggle follow/unfollow artist",
        "tags": [
          "Follow"
        ],
        "description": "Follow or unfollow an artist (toggle action)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "artistId"
                ],
                "properties": {
                  "artistId": {
                    "type": "string",
                    "description": "Artist ID to follow/unfollow"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Follow status toggled successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Artist not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/follow/following/{userId}": {
      "get": {
        "summary": "Get user following",
        "tags": [
          "Follow"
        ],
        "description": "Get paginated list of users that the user is following",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Following list retrieved successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/follow/status/{artistId}": {
      "get": {
        "summary": "Check follow status",
        "tags": [
          "Follow"
        ],
        "description": "Check if current user is following an artist",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "artistId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Artist ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Follow status retrieved successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/follow/stats/{userId}": {
      "get": {
        "summary": "Get follow statistics",
        "tags": [
          "Follow"
        ],
        "description": "Get follow statistics for a user (followers and following count)",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Follow statistics retrieved successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/follow/follow": {
      "post": {
        "summary": "متابعة فنان",
        "tags": [
          "Follow"
        ],
        "description": "إنشاء علاقة متابعة بين المستخدم والفنان.\nلا يمكن للمستخدم متابعة نفسه.\n",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "artistId"
                ],
                "properties": {
                  "artistId": {
                    "type": "string",
                    "pattern": "^[0-9a-fA-F]{24}$",
                    "example": "60d0fe4f5311236168a109ca",
                    "description": "معرف الفنان المراد متابعته"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "تمت المتابعة بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تمت المتابعة بنجاح"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "60d0fe4f5311236168a109ca"
                        },
                        "artistId": {
                          "type": "string",
                          "example": "60d0fe4f5311236168a109ca"
                        },
                        "artistName": {
                          "type": "string",
                          "example": "أحمد محمد"
                        },
                        "followedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-05-15T10:30:45.123Z"
                        },
                        "isFollowing": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "خطأ في البيانات أو لا يمكن متابعة نفسك",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "لا يمكنك متابعة نفسك"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "الفنان غير موجود",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "الفنان غير موجود"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "أنت تتابع هذا الفنان بالفعل",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "أنت تتابع هذا الفنان بالفعل"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-screen": "ArtistProfileScreen"
      }
    },
    "/follow/unfollow": {
      "post": {
        "summary": "إلغاء متابعة فنان",
        "tags": [
          "Follow"
        ],
        "description": "إزالة علاقة المتابعة بين المستخدم والفنان.\n",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "artistId"
                ],
                "properties": {
                  "artistId": {
                    "type": "string",
                    "pattern": "^[0-9a-fA-F]{24}$",
                    "example": "60d0fe4f5311236168a109ca",
                    "description": "معرف الفنان المراد إلغاء متابعته"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم إلغاء المتابعة بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم إلغاء المتابعة بنجاح"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "artistId": {
                          "type": "string",
                          "example": "60d0fe4f5311236168a109ca"
                        },
                        "isFollowing": {
                          "type": "boolean",
                          "example": false
                        },
                        "unfollowedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-05-15T10:30:45.123Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "أنت لا تتابع هذا الفنان",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "أنت لا تتابع هذا الفنان"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-screen": "ArtistProfileScreen"
      }
    },
    "/follow/my-followers": {
      "get": {
        "summary": "جلب متابعيّ",
        "tags": [
          "Follow"
        ],
        "description": "جلب قائمة مقسمة من متابعي المستخدم الحالي مع إمكانية البحث.\n",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "رقم الصفحة",
            "example": 1
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 20
            },
            "description": "عدد المتابعين في الصفحة",
            "example": 20
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 100
            },
            "description": "البحث في أسماء المتابعين",
            "example": "أحمد"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب متابعيك بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم جلب متابعيك بنجاح"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "followers": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/FollowUser"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/PaginationResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-screen": "MyFollowersScreen"
      }
    },
    "/follow/my-following": {
      "get": {
        "summary": "جلب متابعاتي",
        "tags": [
          "Follow"
        ],
        "description": "جلب قائمة مقسمة من الفنانين الذين يتابعهم المستخدم الحالي.\n",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "رقم الصفحة",
            "example": 1
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 20
            },
            "description": "عدد المتابعات في الصفحة",
            "example": 20
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 100
            },
            "description": "البحث في أسماء الفنانين",
            "example": "فاطمة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب قائمة متابعاتك بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم جلب قائمة متابعاتك بنجاح"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "following": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/FollowUser"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/PaginationResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-screen": "MyFollowingScreen"
      }
    },
    "/follow/mutual/{userId}": {
      "get": {
        "summary": "جلب المتابعات المشتركة",
        "tags": [
          "Follow"
        ],
        "description": "جلب قائمة المستخدمين الذين يتابعهم كل من المستخدم الحالي والمستخدم المحدد.\n",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "معرف المستخدم المراد مقارنة المتابعات معه",
            "example": "60d0fe4f5311236168a109ca"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "رقم الصفحة",
            "example": 1
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 20
            },
            "description": "عدد المتابعات المشتركة في الصفحة",
            "example": 20
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب المتابعات المشتركة بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم جلب المتابعات المشتركة بنجاح"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "mutualFollows": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string"
                              },
                              "displayName": {
                                "type": "string"
                              },
                              "userName": {
                                "type": "string"
                              },
                              "profileImage": {
                                "type": "object"
                              },
                              "job": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/PaginationResponse"
                        },
                        "targetUser": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "المستخدم غير موجود",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "المستخدم غير موجود"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-screen": "MutualFollowsScreen"
      }
    },
    "/notifications": {
      "get": {
        "summary": "Get user notifications",
        "tags": [
          "Notifications"
        ],
        "description": "Get paginated list of user notifications",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Items per page"
          },
          {
            "in": "query",
            "name": "unreadOnly",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Get only unread notifications"
          }
        ],
        "responses": {
          "200": {
            "description": "Notifications retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Notifications"
        ],
        "summary": "حذف جميع الإشعارات",
        "description": "حذف جميع إشعارات المستخدم\n\n**تحذير:** هذا الإجراء لا يمكن التراجع عنه\n\n**Flutter Integration:**\n```dart\nfinal response = await dio.delete('/api/notifications');\n```\n",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ar",
                "en"
              ],
              "default": "ar"
            },
            "description": "لغة الاستجابة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم حذف جميع الإشعارات بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم حذف جميع الإشعارات بنجاح"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "deletedCount": {
                          "type": "integer",
                          "example": 25
                        },
                        "message": {
                          "type": "string",
                          "example": "تم حذف 25 إشعار"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-screen": "NotificationsScreen"
      },
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "إنشاء إشعار جديد (للمشرفين)",
        "description": "إنشاء إشعار جديد وإرساله لمستخدم محدد\n\n**ملاحظة:** هذا الـ API متاح للمشرفين فقط\n",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "تم إنشاء الإشعار بنجاح"
          },
          "400": {
            "description": "خطأ في البيانات المرسلة"
          },
          "404": {
            "description": "المستخدم المتلقي غير موجود"
          }
        },
        "x-screen": "AdminNotificationScreen"
      }
    },
    "/notifications/firebase": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "الحصول على إشعارات المستخدم (Firebase)",
        "description": "استرجاع إشعارات المستخدم باستخدام مصادقة Firebase",
        "security": [
          {
            "FirebaseAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/language"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/NotificationListResponse"
          }
        },
        "x-screen": "NotificationsScreen"
      }
    },
    "/notifications/stats": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "الحصول على إحصائيات الإشعارات",
        "description": "جلب إحصائيات شاملة عن إشعارات المستخدم\n\n**Flutter Integration:**\n```dart\nfinal response = await dio.get('/api/notifications/stats',\n  queryParameters: {\n    'period': 'month',\n    'groupBy': 'type'\n  }\n);\n```\n",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "day",
                "week",
                "month",
                "year",
                "all"
              ],
              "default": "month"
            },
            "description": "فترة الإحصائيات"
          },
          {
            "name": "groupBy",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "type",
                "date",
                "status"
              ]
            },
            "description": "تجميع الإحصائيات حسب"
          },
          {
            "name": "language",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ar",
                "en"
              ],
              "default": "ar"
            },
            "description": "لغة الاستجابة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب الإحصائيات بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "summary": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer"
                            },
                            "unread": {
                              "type": "integer"
                            },
                            "read": {
                              "type": "integer"
                            },
                            "readRate": {
                              "type": "string"
                            }
                          }
                        },
                        "byType": {
                          "type": "object"
                        },
                        "recentActivity": {
                          "type": "array"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-screen": "NotificationStatsScreen"
      }
    },
    "/notifications/settings": {
      "get": {
        "summary": "Get notification settings",
        "tags": [
          "Notifications"
        ],
        "description": "Get user notification preferences",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Notification settings retrieved successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update notification settings",
        "tags": [
          "Notifications"
        ],
        "description": "Update user notification preferences",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notificationSettings": {
                    "type": "object",
                    "properties": {
                      "pushNotifications": {
                        "type": "boolean"
                      },
                      "emailNotifications": {
                        "type": "boolean"
                      },
                      "messageNotifications": {
                        "type": "boolean"
                      },
                      "followNotifications": {
                        "type": "boolean"
                      },
                      "artworkNotifications": {
                        "type": "boolean"
                      },
                      "marketingNotifications": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notification settings updated successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/notifications/{notificationId}/read": {
      "patch": {
        "summary": "Mark notification as read",
        "tags": [
          "Notifications"
        ],
        "description": "Mark a specific notification as read",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "notificationId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Notification ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification marked as read"
          },
          "404": {
            "description": "Notification not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/notifications/read-all": {
      "patch": {
        "summary": "Mark all notifications as read",
        "tags": [
          "Notifications"
        ],
        "description": "Mark all user notifications as read",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "All notifications marked as read"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/notifications/{notificationId}": {
      "delete": {
        "summary": "Delete notification",
        "tags": [
          "Notifications"
        ],
        "description": "Delete a specific notification",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "notificationId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Notification ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification deleted successfully"
          },
          "404": {
            "description": "Notification not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/notifications/token": {
      "post": {
        "tags": [
          "FCM Tokens"
        ],
        "summary": "تسجيل رمز إشعارات FCM",
        "description": "تسجيل رمز FCM للإشعارات الفورية للمستخدم الحالي\n\n**Flutter Integration:**\n```dart\n// Get FCM token\nString? token = await FirebaseMessaging.instance.getToken();\n\n// Register token\nfinal response = await dio.post('/api/notifications/token',\n  data: {\n    'token': token,\n    'deviceType': 'android' // or 'ios', 'web'\n  }\n);\n```\n",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FCMTokenSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تسجيل الرمز بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم تسجيل رمز الإشعارات بنجاح"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string"
                        },
                        "deviceType": {
                          "type": "string"
                        },
                        "registered": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "الرمز مطلوب أو غير صحيح"
          }
        },
        "x-screen": "SettingsScreen"
      },
      "delete": {
        "tags": [
          "FCM Tokens"
        ],
        "summary": "إلغاء تسجيل رمز إشعارات FCM",
        "description": "إلغاء تسجيل رمز FCM للإشعارات الفورية\n\n**Flutter Integration:**\n```dart\nfinal response = await dio.delete('/api/notifications/token',\n  data: {\n    'token': fcmToken\n  }\n);\n```\n",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "رمز FCM المراد إلغاء تسجيله"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم إلغاء تسجيل الرمز بنجاح"
          },
          "400": {
            "description": "الرمز مطلوب"
          }
        },
        "x-screen": "SettingsScreen"
      }
    },
    "/notifications/token/firebase": {
      "post": {
        "tags": [
          "FCM Tokens"
        ],
        "summary": "تسجيل رمز إشعارات FCM (Firebase)",
        "description": "تسجيل رمز FCM للإشعارات الفورية باستخدام مصادقة Firebase",
        "security": [
          {
            "FirebaseAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FCMTokenSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تسجيل الرمز بنجاح"
          },
          "400": {
            "description": "الرمز مطلوب"
          }
        },
        "x-screen": "SettingsScreen"
      },
      "delete": {
        "tags": [
          "FCM Tokens"
        ],
        "summary": "إلغاء تسجيل رمز إشعارات FCM (Firebase)",
        "description": "إلغاء تسجيل رمز FCM للإشعارات الفورية باستخدام مصادقة Firebase",
        "security": [
          {
            "FirebaseAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "رمز FCM المراد إلغاء تسجيله"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم إلغاء تسجيل الرمز بنجاح"
          },
          "400": {
            "description": "الرمز مطلوب"
          }
        },
        "x-screen": "SettingsScreen"
      }
    },
    "/reports": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "إنشاء تقرير جديد",
        "description": "الإبلاغ عن محتوى غير مناسب أو مخالف لسياسات المنصة",
        "x-screen": "ReportContentScreen",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "FirebaseAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReportRequest"
              },
              "examples": {
                "artwork_report": {
                  "summary": "الإبلاغ عن عمل فني",
                  "value": {
                    "contentType": "artwork",
                    "contentId": "507f1f77bcf86cd799439011",
                    "reason": "inappropriate",
                    "description": "هذا العمل الفني يحتوي على محتوى غير مناسب",
                    "priority": "medium"
                  }
                },
                "user_report": {
                  "summary": "الإبلاغ عن مستخدم",
                  "value": {
                    "contentType": "user",
                    "contentId": "507f1f77bcf86cd799439012",
                    "reason": "harassment",
                    "description": "هذا المستخدم يقوم بالتحرش والإزعاج",
                    "priority": "high",
                    "evidence": [
                      "https://example.com/screenshot1.jpg"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "تم إنشاء التقرير بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم إرسال التقرير بنجاح، سيتم مراجعته قريباً"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Report"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "description": "المحتوى المبلغ عنه غير موجود"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/reports/{reportId}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "عرض تفاصيل تقرير",
        "description": "عرض تفاصيل تقرير محدد مع التقارير المرتبطة للمدراء",
        "x-screen": "ReportDetailsScreen",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "FirebaseAuth": []
          }
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "معرف التقرير (MongoDB ObjectId)",
            "example": "507f1f77bcf86cd799439011"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب تفاصيل التقرير بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Report"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "التقرير غير موجود"
          }
        }
      },
      "delete": {
        "tags": [
          "Reports"
        ],
        "summary": "حذف تقرير",
        "description": "حذف تقرير قام المستخدم بإنشائه (يمكن فقط إذا كان التقرير قيد الانتظار)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف التقرير"
          }
        ],
        "responses": {
          "200": {
            "description": "تم حذف التقرير بنجاح"
          },
          "404": {
            "description": "التقرير غير موجود أو لا يمكن حذفه"
          }
        }
      }
    },
    "/reports/admin/stats": {
      "get": {
        "tags": [
          "Reports",
          "Admin"
        ],
        "summary": "إحصائيات التقارير",
        "description": "عرض إحصائيات شاملة للتقارير مع إمكانية التصفية (للمدير فقط)",
        "x-screen": "AdminReportsStatsScreen",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "day",
                "week",
                "month",
                "quarter",
                "year",
                "all"
              ],
              "default": "month"
            },
            "description": "فترة الإحصائيات"
          },
          {
            "name": "groupBy",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "status",
                "contentType",
                "reason",
                "priority",
                "date"
              ],
              "default": "status"
            },
            "description": "معيار التجميع"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "تاريخ البداية"
          },
          {
            "name": "dateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "تاريخ النهاية"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب إحصائيات التقارير بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ReportStatsResponse"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/reports/admin/all": {
      "get": {
        "tags": [
          "Reports",
          "Admin"
        ],
        "summary": "قائمة جميع التقارير",
        "description": "عرض قائمة جميع التقارير (للمدير فقط)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "عدد العناصر في الصفحة"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "resolved",
                "rejected"
              ]
            },
            "description": "تصفية حسب الحالة"
          },
          {
            "name": "contentType",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "artwork",
                "image",
                "user",
                "comment",
                "message"
              ]
            },
            "description": "تصفية حسب نوع المحتوى"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب قائمة التقارير بنجاح"
          },
          "403": {
            "description": "غير مصرح لك بعرض قائمة التقارير"
          }
        }
      }
    },
    "/reports/admin/{reportId}/status": {
      "patch": {
        "tags": [
          "Reports",
          "Admin"
        ],
        "summary": "تحديث حالة تقرير",
        "description": "تحديث حالة تقرير محدد (للمدير فقط)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف التقرير"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "resolved",
                      "rejected"
                    ],
                    "description": "الحالة الجديدة"
                  },
                  "adminNotes": {
                    "type": "string",
                    "description": "ملاحظات المدير"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تحديث حالة التقرير بنجاح"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "التقرير غير موجود"
          }
        }
      }
    },
    "/reports/admin/bulk-update": {
      "patch": {
        "tags": [
          "Reports",
          "Admin"
        ],
        "summary": "تحديث متعدد للتقارير",
        "description": "تحديث حالة عدة تقارير في مرة واحدة (للمدير فقط)",
        "x-screen": "AdminBulkReportsScreen",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUpdateReportsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تحديث التقارير بنجاح"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/reports/content/{contentType}/{contentId}": {
      "get": {
        "tags": [
          "Reports",
          "Admin"
        ],
        "summary": "تقارير محتوى معين",
        "description": "عرض جميع التقارير المتعلقة بمحتوى معين (للمدير فقط)",
        "x-screen": "AdminContentReportsScreen",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "contentType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "artwork",
                "image",
                "user",
                "comment",
                "message",
                "review",
                "specialRequest"
              ]
            },
            "description": "نوع المحتوى"
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "معرف المحتوى"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            },
            "description": "عدد العناصر في الصفحة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب تقارير المحتوى بنجاح"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/reviews/artwork": {
      "post": {
        "tags": [
          "Reviews"
        ],
        "summary": "إنشاء تقييم جديد لعمل فني",
        "description": "إضافة تقييم وتعليق مفصل لعمل فني مع إمكانية إضافة تقييمات فرعية ونقاط إيجابية وسلبية\n\n**ملاحظات للتطوير في Flutter:**\n```dart\n// مثال على إرسال طلب إنشاء تقييم\nfinal response = await dio.post('/api/reviews/artwork', data: {\n  'artwork': artworkId,\n  'rating': 5,\n  'title': 'عمل فني رائع',\n  'comment': 'تعليق مفصل...',\n  'pros': ['تقنية ممتازة', 'ألوان جميلة'],\n  'cons': ['يحتاج لمزيد من التفاصيل'],\n  'subRatings': {\n    'creativity': 5,\n    'technique': 4,\n    'composition': 5\n  },\n  'isRecommended': true\n});\n```\n",
        "x-screen": "ArtworkDetailsScreen, WriteReviewScreen",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "FirebaseAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateArtworkReviewRequest"
              },
              "examples": {
                "basic_review": {
                  "summary": "تقييم أساسي",
                  "value": {
                    "artwork": "507f1f77bcf86cd799439011",
                    "rating": 4,
                    "comment": "عمل فني جميل وإبداعي"
                  }
                },
                "detailed_review": {
                  "summary": "تقييم مفصل",
                  "value": {
                    "artwork": "507f1f77bcf86cd799439011",
                    "rating": 5,
                    "title": "تحفة فنية حقيقية",
                    "comment": "هذا العمل يظهر مهارة عالية في التقنية والإبداع",
                    "pros": [
                      "تقنية ممتازة",
                      "ألوان متناسقة",
                      "تكوين متوازن"
                    ],
                    "cons": [
                      "يحتاج لمزيد من التفاصيل في الخلفية"
                    ],
                    "subRatings": {
                      "creativity": 5,
                      "technique": 4,
                      "composition": 5,
                      "originality": 5,
                      "impact": 4
                    },
                    "isRecommended": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "تم إنشاء التقييم بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم إضافة التقييم بنجاح"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Review"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/reviews/artwork/{reviewId}": {
      "put": {
        "tags": [
          "Reviews"
        ],
        "summary": "تحديث تقييم عمل فني موجود",
        "description": "تحديث تقييم موجود لعمل فني (يمكن للمستخدم تحديث تقييمه فقط)\n\n**ملاحظات للتطوير في Flutter:**\n```dart\n// تحديث تقييم موجود\nfinal response = await dio.put('/api/reviews/artwork/$reviewId', data: {\n  'rating': 4,\n  'title': 'عنوان محدث',\n  'comment': 'تعليق محدث...'\n});\n```\n",
        "x-screen": "EditReviewScreen, MyReviewsScreen",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "FirebaseAuth": []
          }
        ],
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "معرف التقييم"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateArtworkReviewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تحديث التقييم بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم تحديث التقييم بنجاح"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Review"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/reviews/artist": {
      "post": {
        "tags": [
          "Reviews"
        ],
        "summary": "إنشاء تقييم جديد لفنان",
        "description": "إضافة تقييم وتعليق لفنان مع إمكانية إضافة نقاط إيجابية وسلبية\n\n**ملاحظات للتطوير في Flutter:**\n```dart\n// إنشاء تقييم للفنان\nfinal response = await dio.post('/api/reviews/artist', data: {\n  'artist': artistId,\n  'rating': 5,\n  'title': 'فنان محترف',\n  'comment': 'تعامل ممتاز وجودة عالية',\n  'pros': ['سرعة في التنفيذ', 'جودة عالية'],\n  'cons': ['الأسعار مرتفعة قليلاً'],\n  'isRecommended': true\n});\n```\n",
        "x-screen": "ArtistProfileScreen, WriteReviewScreen",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "FirebaseAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateArtistReviewRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "تم إنشاء تقييم الفنان بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم إضافة تقييم الفنان بنجاح"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Review"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/reviews/artist/{reviewId}": {
      "put": {
        "tags": [
          "Reviews"
        ],
        "summary": "تحديث تقييم فنان موجود",
        "description": "تحديث تقييم موجود لفنان (يمكن للمستخدم تحديث تقييمه فقط)",
        "x-screen": "EditReviewScreen, MyReviewsScreen",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "FirebaseAuth": []
          }
        ],
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "معرف التقييم"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateArtistReviewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تحديث تقييم الفنان بنجاح"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/reviews/artist/{artistId}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "جلب تقييمات فنان مع إحصائيات شاملة",
        "description": "جلب جميع التقييمات لفنان معين مع إحصائيات مفصلة وخيارات تصفية وترتيب متقدمة\n\n**ملاحظات للتطوير في Flutter:**\n```dart\n// جلب تقييمات الفنان\nfinal response = await dio.get('/api/reviews/artist/$artistId', \n  queryParameters: {\n    'page': 1,\n    'limit': 10,\n    'recommended': true, // التوصيات فقط\n    'sortBy': 'createdAt',\n    'sortOrder': 'desc'\n  }\n);\n```\n",
        "x-screen": "ArtistProfileScreen, ReviewsListScreen",
        "parameters": [
          {
            "name": "artistId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "معرف الفنان",
            "example": "507f1f77bcf86cd799439012"
          },
          {
            "$ref": "#/components/parameters/ReviewQueryParams"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب تقييمات الفنان بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم جلب تقييمات الفنان بنجاح"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "reviews": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Review"
                          }
                        },
                        "stats": {
                          "type": "object",
                          "properties": {
                            "avgRating": {
                              "type": "number",
                              "example": 4.5
                            },
                            "totalReviews": {
                              "type": "integer",
                              "example": 18
                            },
                            "distribution": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              },
                              "example": [
                                12,
                                3,
                                2,
                                1,
                                0
                              ]
                            },
                            "verifiedCount": {
                              "type": "integer",
                              "example": 10
                            },
                            "recommendedCount": {
                              "type": "integer",
                              "example": 15
                            },
                            "recommendationRate": {
                              "type": "integer",
                              "example": 83
                            }
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/PaginationInfo"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/reviews/{reviewId}": {
      "delete": {
        "tags": [
          "Reviews"
        ],
        "summary": "حذف تقييم",
        "description": "حذف تقييم موجود (يمكن للمستخدم حذف تقييمه فقط)\n\n**ملاحظات للتطوير في Flutter:**\n```dart\n// حذف تقييم\nfinal response = await dio.delete('/api/reviews/$reviewId');\nif (response.data['success']) {\n  // إزالة التقييم من القائمة المحلية\n  setState(() {\n    reviews.removeWhere((review) => review.id == reviewId);\n  });\n}\n```\n",
        "x-screen": "MyReviewsScreen, ReviewDetailsScreen",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "FirebaseAuth": []
          }
        ],
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "معرف التقييم"
          }
        ],
        "responses": {
          "200": {
            "description": "تم حذف التقييم بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم حذف التقييم بنجاح"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/reviews/{reviewId}/helpful": {
      "post": {
        "tags": [
          "Reviews"
        ],
        "summary": "تمييز التقييم كمفيد أو إلغاء التمييز",
        "description": "تمييز تقييم كمفيد أو إلغاء التمييز (لا يمكن تمييز التقييم الخاص بالمستخدم)\n\n**ملاحظات للتطوير في Flutter:**\n```dart\n// تمييز التقييم كمفيد\nfinal response = await dio.post('/api/reviews/$reviewId/helpful', \n  data: {'helpful': true}\n);\n\n// تحديث واجهة المستخدم\nsetState(() {\n  review.helpfulVotes = response.data['data']['helpfulVotes'];\n  review.isMarkedHelpful = response.data['data']['isMarkedHelpful'];\n});\n```\n",
        "x-screen": "ReviewsListScreen, ReviewDetailsScreen",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "FirebaseAuth": []
          }
        ],
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "معرف التقييم"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "helpful": {
                    "type": "boolean",
                    "description": "true لتمييز كمفيد، false لإلغاء التمييز",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تحديث حالة التمييز بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم تمييز التقييم كمفيد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "reviewId": {
                          "type": "string",
                          "example": "507f1f77bcf86cd799439013"
                        },
                        "helpfulVotes": {
                          "type": "integer",
                          "example": 5
                        },
                        "isMarkedHelpful": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/reviews/{reviewId}/report": {
      "post": {
        "tags": [
          "Reviews"
        ],
        "summary": "الإبلاغ عن تقييم",
        "description": "الإبلاغ عن تقييم غير مناسب أو مخالف (لا يمكن الإبلاغ عن التقييم الخاص بالمستخدم)\n\n**ملاحظات للتطوير في Flutter:**\n```dart\n// الإبلاغ عن تقييم\nfinal response = await dio.post('/api/reviews/$reviewId/report', \n  data: {\n    'reason': 'inappropriate',\n    'description': 'يحتوي على محتوى غير مناسب'\n  }\n);\n\n// إظهار رسالة تأكيد\nScaffoldMessenger.of(context).showSnackBar(\n  SnackBar(content: Text(response.data['message']))\n);\n```\n",
        "x-screen": "ReviewDetailsScreen, ReviewsListScreen",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "FirebaseAuth": []
          }
        ],
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "معرف التقييم"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "enum": [
                      "inappropriate",
                      "spam",
                      "offensive",
                      "fake",
                      "other"
                    ],
                    "description": "سبب الإبلاغ",
                    "example": "inappropriate"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 500,
                    "description": "وصف مفصل للمشكلة (اختياري)",
                    "example": "يحتوي على محتوى غير مناسب"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم الإبلاغ عن التقييم بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم الإبلاغ عن التقييم بنجاح"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/reviews/my": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "جلب تقييمات المستخدم",
        "description": "جلب جميع التقييمات التي كتبها المستخدم مع إحصائيات شخصية\n\n**ملاحظات للتطوير في Flutter:**\n```dart\n// جلب تقييمات المستخدم\nfinal response = await dio.get('/api/reviews/my', \n  queryParameters: {\n    'type': 'artwork', // artwork أو artist\n    'page': 1,\n    'limit': 10\n  }\n);\n\n// عرض الإحصائيات الشخصية\nfinal stats = response.data['data']['stats'];\nprint('متوسط تقييماتي: ${stats['avgRating']}');\nprint('إجمالي الأصوات المفيدة: ${stats['totalHelpfulVotes']}');\n```\n",
        "x-screen": "MyReviewsScreen, ProfileScreen",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "FirebaseAuth": []
          }
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "artwork",
                "artist"
              ]
            },
            "description": "نوع التقييمات المطلوبة"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            },
            "description": "عدد العناصر في الصفحة"
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "createdAt",
                "rating",
                "helpfulVotes"
              ],
              "default": "createdAt"
            },
            "description": "معيار الترتيب"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "description": "اتجاه الترتيب"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب التقييمات بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم جلب تقييماتك بنجاح"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "reviews": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Review"
                          }
                        },
                        "stats": {
                          "type": "object",
                          "properties": {
                            "avgRating": {
                              "type": "number",
                              "example": 4.3
                            },
                            "totalHelpfulVotes": {
                              "type": "integer",
                              "example": 25
                            },
                            "artworkReviews": {
                              "type": "integer",
                              "example": 12
                            },
                            "artistReviews": {
                              "type": "integer",
                              "example": 8
                            }
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/PaginationInfo"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/reviews/admin/stats": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "جلب إحصائيات التقييمات (للمدراء)",
        "description": "جلب إحصائيات شاملة عن التقييمات في النظام (مخصص للمدراء فقط)",
        "x-screen": "AdminDashboardScreen, AdminStatsScreen",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "FirebaseAuth": []
          }
        ],
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "day",
                "week",
                "month",
                "quarter",
                "year",
                "all"
              ],
              "default": "month"
            },
            "description": "فترة الإحصائيات"
          },
          {
            "name": "groupBy",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "rating",
                "date",
                "verified",
                "recommended"
              ],
              "default": "rating"
            },
            "description": "معيار التجميع"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب الإحصائيات بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم جلب إحصائيات التقييمات بنجاح"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "summary": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "example": 1250
                            },
                            "artworkReviews": {
                              "type": "integer",
                              "example": 800
                            },
                            "artistReviews": {
                              "type": "integer",
                              "example": 450
                            },
                            "avgRating": {
                              "type": "number",
                              "example": 4.2
                            }
                          }
                        },
                        "distribution": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "integer",
                                "example": 5
                              },
                              "count": {
                                "type": "integer",
                                "example": 600
                              }
                            }
                          }
                        },
                        "activity": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "example": "2024-01-15"
                              },
                              "count": {
                                "type": "integer",
                                "example": 25
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/reviews/{reviewId}/moderate": {
      "patch": {
        "tags": [
          "Reviews"
        ],
        "summary": "إدارة التقييم (للمدراء)",
        "description": "تحديث حالة التقييم وإضافة ملاحظات إدارية (مخصص للمدراء فقط)",
        "x-screen": "AdminReviewsScreen, AdminModerationScreen",
        "security": [
          {
            "BearerAuth": []
          },
          {
            "FirebaseAuth": []
          }
        ],
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "معرف التقييم"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "hidden",
                      "reported",
                      "deleted"
                    ],
                    "description": "الحالة الجديدة للتقييم",
                    "example": "hidden"
                  },
                  "moderationNotes": {
                    "type": "string",
                    "maxLength": 500,
                    "description": "ملاحظات الإدارة",
                    "example": "تم إخفاء التقييم لاحتوائه على محتوى غير مناسب"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تحديث حالة التقييم بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم تحديث حالة التقييم بنجاح"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Review"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/special-requests": {
      "post": {
        "tags": [
          "Special Requests"
        ],
        "summary": "إنشاء طلب خاص",
        "description": "إرسال طلب خاص لفنان محدد",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "artist",
                  "requestType",
                  "description",
                  "budget"
                ],
                "properties": {
                  "artist": {
                    "type": "string",
                    "description": "معرف الفنان"
                  },
                  "requestType": {
                    "type": "string",
                    "description": "نوع الطلب الخاص"
                  },
                  "description": {
                    "type": "string",
                    "description": "وصف تفصيلي للطلب"
                  },
                  "budget": {
                    "type": "number",
                    "description": "الميزانية المقترحة"
                  },
                  "deadline": {
                    "type": "string",
                    "format": "date-time",
                    "description": "الموعد النهائي (اختياري)"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    },
                    "description": "روابط ملفات مرفقة (اختياري)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "تم إنشاء الطلب الخاص بنجاح"
          },
          "400": {
            "description": "بيانات غير صالحة"
          },
          "404": {
            "description": "الفنان غير موجود"
          }
        }
      }
    },
    "/special-requests/my": {
      "get": {
        "tags": [
          "Special Requests"
        ],
        "summary": "عرض طلباتي الخاصة",
        "description": "عرض الطلبات الخاصة التي أرسلها المستخدم",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "عدد العناصر في الصفحة"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "accepted",
                "rejected",
                "completed"
              ]
            },
            "description": "تصفية حسب الحالة"
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "ترتيب حسب الحقل"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "طريقة الترتيب"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب طلبات المستخدم بنجاح"
          }
        }
      }
    },
    "/special-requests/artist": {
      "get": {
        "tags": [
          "Special Requests"
        ],
        "summary": "عرض الطلبات الموجهة للفنان",
        "description": "عرض الطلبات الخاصة المرسلة إلى الفنان",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "عدد العناصر في الصفحة"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "accepted",
                "rejected",
                "completed"
              ]
            },
            "description": "تصفية حسب الحالة"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب طلبات الفنان بنجاح"
          },
          "403": {
            "description": "غير مصرح لك بعرض طلبات الفنانين"
          }
        }
      }
    },
    "/special-requests/artist/stats": {
      "get": {
        "tags": [
          "Special Requests"
        ],
        "summary": "إحصائيات الطلبات للفنان",
        "description": "عرض إحصائيات الطلبات الخاصة للفنان",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب إحصائيات الطلبات بنجاح"
          },
          "403": {
            "description": "غير مصرح لك بعرض إحصائيات الفنانين"
          }
        }
      }
    },
    "/special-requests/{requestId}": {
      "get": {
        "tags": [
          "Special Requests"
        ],
        "summary": "تفاصيل طلب خاص",
        "description": "عرض تفاصيل طلب خاص محدد",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف الطلب"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب تفاصيل الطلب بنجاح"
          },
          "404": {
            "description": "الطلب غير موجود"
          }
        }
      }
    },
    "/special-requests/{requestId}/status": {
      "patch": {
        "tags": [
          "Special Requests"
        ],
        "summary": "تحديث حالة الطلب",
        "description": "تحديث حالة طلب خاص (للفنان فقط)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف الطلب"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "accepted",
                      "rejected",
                      "completed"
                    ]
                  },
                  "response": {
                    "type": "string",
                    "description": "رد أو ملاحظات إضافية"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تحديث حالة الطلب بنجاح"
          },
          "404": {
            "description": "الطلب غير موجود"
          }
        }
      }
    },
    "/special-requests/{requestId}/response": {
      "post": {
        "tags": [
          "Special Requests"
        ],
        "summary": "إضافة رد للطلب",
        "description": "إضافة رد أو تعليق على طلب خاص",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف الطلب"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "response"
                ],
                "properties": {
                  "response": {
                    "type": "string",
                    "description": "الرد أو التعليق"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم إضافة الرد بنجاح"
          },
          "404": {
            "description": "الطلب غير موجود"
          }
        }
      }
    },
    "/special-requests/{requestId}/complete": {
      "post": {
        "tags": [
          "Special Requests"
        ],
        "summary": "إكمال الطلب الخاص",
        "description": "وضع علامة على الطلب الخاص كمكتمل (بواسطة الفنان)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "معرف الطلب"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "finalWork": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "روابط العمل النهائي"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم إكمال الطلب بنجاح"
          },
          "404": {
            "description": "الطلب غير موجود"
          }
        }
      }
    },
    "/transactions": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "إنشاء معاملة جديدة",
        "description": "إنشاء معاملة لشراء عمل فني أو دفع طلب خاص مع دعم التقسيط والخصومات",
        "x-screen": "checkout_screen",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionRequest"
              },
              "examples": {
                "artwork_purchase": {
                  "summary": "شراء عمل فني",
                  "value": {
                    "items": [
                      {
                        "artworkId": "507f1f77bcf86cd799439011",
                        "quantity": 1
                      }
                    ],
                    "payment": {
                      "method": "credit_card",
                      "provider": "stripe",
                      "transactionId": "pi_1234567890",
                      "cardLast4": "4242",
                      "cardBrand": "visa"
                    },
                    "shipping": {
                      "address": {
                        "fullName": "أحمد محمد",
                        "addressLine1": "شارع الملك فهد، حي النخيل",
                        "city": "الرياض",
                        "country": "SA",
                        "phoneNumber": "+966501234567"
                      },
                      "method": "standard"
                    },
                    "notes": "يرجى التعامل بحذر مع اللوحة"
                  }
                },
                "special_request_payment": {
                  "summary": "دفع طلب خاص",
                  "value": {
                    "items": [
                      {
                        "specialRequestId": "507f1f77bcf86cd799439012",
                        "quantity": 1
                      }
                    ],
                    "payment": {
                      "method": "mada",
                      "provider": "hyperpay",
                      "transactionId": "8ac7a4a27e4e2b5e017e4e3b6c123456"
                    },
                    "shipping": {
                      "address": {
                        "fullName": "فاطمة علي",
                        "addressLine1": "طريق الأمير محمد بن عبد العزيز",
                        "city": "جدة",
                        "country": "SA",
                        "phoneNumber": "+966551234567"
                      },
                      "method": "express"
                    }
                  }
                },
                "installment_purchase": {
                  "summary": "شراء بالتقسيط",
                  "value": {
                    "items": [
                      {
                        "artworkId": "507f1f77bcf86cd799439013",
                        "quantity": 1
                      }
                    ],
                    "payment": {
                      "method": "credit_card",
                      "provider": "stripe"
                    },
                    "shipping": {
                      "address": {
                        "fullName": "محمد سالم",
                        "addressLine1": "شارع التحلية",
                        "city": "الخبر",
                        "country": "SA",
                        "phoneNumber": "+966501234567"
                      }
                    },
                    "installments": {
                      "enabled": true,
                      "totalInstallments": 6
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "تم إنشاء المعاملة بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم إنشاء المعاملة بنجاح"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Transaction"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "بيانات غير صالحة"
          },
          "403": {
            "description": "غير مصرح"
          },
          "404": {
            "description": "العنصر غير موجود"
          }
        }
      },
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "قائمة معاملات المستخدم",
        "description": "الحصول على قائمة معاملات المستخدم مع فلترة وبحث متقدم",
        "x-screen": "transactions_list_screen",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "رقم الصفحة"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            },
            "description": "عدد النتائج في الصفحة"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "processing",
                "confirmed",
                "shipped",
                "delivered",
                "completed",
                "cancelled",
                "refunded",
                "disputed"
              ]
            },
            "description": "فلترة حسب الحالة"
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "buying",
                "selling",
                "all"
              ],
              "default": "all"
            },
            "description": "نوع المعاملة"
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "تاريخ البداية"
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "تاريخ النهاية"
          },
          {
            "name": "minAmount",
            "in": "query",
            "schema": {
              "type": "number",
              "minimum": 0
            },
            "description": "الحد الأدنى للمبلغ"
          },
          {
            "name": "maxAmount",
            "in": "query",
            "schema": {
              "type": "number",
              "minimum": 0
            },
            "description": "الحد الأقصى للمبلغ"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string",
              "maxLength": 100
            },
            "description": "البحث في رقم المعاملة أو الملاحظات"
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "createdAt",
                "updatedAt",
                "totalAmount",
                "status",
                "transactionNumber"
              ],
              "default": "createdAt"
            },
            "description": "معيار الترتيب"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "description": "اتجاه الترتيب"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب المعاملات بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم جلب المعاملات بنجاح"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "transactions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Transaction"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/PaginationMeta"
                        },
                        "summary": {
                          "type": "object",
                          "properties": {
                            "totalTransactions": {
                              "type": "integer"
                            },
                            "totalAmount": {
                              "type": "number"
                            },
                            "averageAmount": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions/stats": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "إحصائيات المعاملات",
        "description": "الحصول على إحصائيات شاملة لمعاملات المستخدم",
        "x-screen": "transaction_stats_screen",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "day",
                "week",
                "month",
                "quarter",
                "year",
                "all"
              ],
              "default": "month"
            },
            "description": "فترة الإحصائيات"
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "تاريخ البداية (للفترة المخصصة)"
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "تاريخ النهاية (للفترة المخصصة)"
          },
          {
            "name": "groupBy",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "status",
                "method",
                "currency",
                "date"
              ],
              "default": "status"
            },
            "description": "معيار التجميع"
          },
          {
            "name": "includeRefunds",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "description": "تضمين المعاملات المستردة"
          },
          {
            "name": "includeDisputes",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "description": "تضمين المعاملات المتنازع عليها"
          }
        ],
        "responses": {
          "200": {
            "description": "تم جلب الإحصائيات بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم جلب الإحصائيات بنجاح"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "summary": {
                          "type": "object",
                          "properties": {
                            "buyer": {
                              "type": "object"
                            },
                            "seller": {
                              "type": "object"
                            },
                            "combined": {
                              "type": "object"
                            }
                          }
                        },
                        "detailed": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "additional": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions/export": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "تصدير بيانات المعاملات",
        "description": "تصدير بيانات المعاملات بتنسيقات مختلفة (CSV, Excel, PDF)",
        "x-screen": "export_screen",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "csv",
                "excel",
                "pdf"
              ],
              "default": "csv"
            },
            "description": "تنسيق التصدير"
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "تاريخ البداية"
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "تاريخ النهاية"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "processing",
                  "confirmed",
                  "shipped",
                  "delivered",
                  "completed",
                  "cancelled",
                  "refunded",
                  "disputed"
                ]
              }
            },
            "description": "حالات المعاملات المراد تصديرها"
          },
          {
            "name": "includeItems",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "description": "تضمين تفاصيل العناصر"
          },
          {
            "name": "includeShipping",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "description": "تضمين تفاصيل الشحن"
          },
          {
            "name": "includePayment",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "تضمين تفاصيل الدفع"
          }
        ],
        "responses": {
          "200": {
            "description": "تم تصدير البيانات بنجاح",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/bulk": {
      "patch": {
        "tags": [
          "Transactions"
        ],
        "summary": "العمليات المجمعة على المعاملات",
        "description": "تحديث حالة عدة معاملات في عملية واحدة (للمدير فقط)",
        "x-screen": "admin_bulk_operations_screen",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "transactionIds",
                  "action"
                ],
                "properties": {
                  "transactionIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^[0-9a-fA-F]{24}$"
                    },
                    "minItems": 1,
                    "maxItems": 50,
                    "description": "معرفات المعاملات"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "cancel",
                      "confirm",
                      "ship",
                      "complete"
                    ],
                    "description": "الإجراء المطلوب"
                  },
                  "reason": {
                    "type": "string",
                    "maxLength": 200,
                    "description": "سبب الإجراء"
                  },
                  "notes": {
                    "type": "string",
                    "maxLength": 1000,
                    "description": "ملاحظات إضافية"
                  }
                }
              },
              "example": {
                "transactionIds": [
                  "507f1f77bcf86cd799439011",
                  "507f1f77bcf86cd799439012"
                ],
                "action": "confirm",
                "reason": "تم التحقق من الدفع",
                "notes": "تأكيد جماعي للمعاملات"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تحديث المعاملات بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم تحديث 5 معاملة من أصل 5"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "transactionId": {
                                "type": "string"
                              },
                              "transactionNumber": {
                                "type": "string"
                              },
                              "success": {
                                "type": "boolean"
                              },
                              "newStatus": {
                                "type": "string"
                              },
                              "error": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "summary": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer"
                            },
                            "successful": {
                              "type": "integer"
                            },
                            "failed": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "غير مصرح (المدير فقط)"
          }
        }
      }
    },
    "/transactions/{transactionId}/status": {
      "patch": {
        "tags": [
          "Transactions"
        ],
        "summary": "تحديث حالة المعاملة",
        "description": "تحديث حالة معاملة محددة (للبائع أو المدير فقط)",
        "x-screen": "seller_order_management_screen",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "معرف المعاملة"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "processing",
                      "confirmed",
                      "shipped",
                      "delivered",
                      "completed",
                      "cancelled",
                      "refunded",
                      "disputed"
                    ],
                    "description": "الحالة الجديدة"
                  },
                  "reason": {
                    "type": "string",
                    "maxLength": 200,
                    "description": "سبب التحديث"
                  },
                  "notes": {
                    "type": "string",
                    "maxLength": 1000,
                    "description": "ملاحظات إضافية"
                  },
                  "trackingInfo": {
                    "type": "object",
                    "description": "معلومات التتبع (عند الشحن)",
                    "properties": {
                      "provider": {
                        "type": "string",
                        "maxLength": 50
                      },
                      "trackingNumber": {
                        "type": "string",
                        "maxLength": 100
                      },
                      "trackingUrl": {
                        "type": "string",
                        "format": "uri"
                      },
                      "estimatedDelivery": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              },
              "examples": {
                "confirm_order": {
                  "summary": "تأكيد الطلب",
                  "value": {
                    "status": "confirmed",
                    "reason": "تم التحقق من الدفع",
                    "notes": "الطلب جاهز للشحن"
                  }
                },
                "ship_order": {
                  "summary": "شحن الطلب",
                  "value": {
                    "status": "shipped",
                    "reason": "تم الشحن",
                    "trackingInfo": {
                      "provider": "aramex",
                      "trackingNumber": "ARX123456789",
                      "trackingUrl": "https://www.aramex.com/track/results?ShipmentNumber=ARX123456789",
                      "estimatedDelivery": "2024-02-15T12:00:00Z"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تحديث حالة المعاملة بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم تحديث حالة المعاملة بنجاح"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Transaction"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "انتقال حالة غير صالح"
          },
          "403": {
            "description": "غير مصرح لك بتعديل هذه المعاملة"
          },
          "404": {
            "description": "المعاملة غير موجودة"
          }
        }
      }
    },
    "/transactions/{transactionId}/tracking": {
      "patch": {
        "tags": [
          "Transactions"
        ],
        "summary": "تحديث معلومات التتبع",
        "description": "تحديث معلومات تتبع الشحن (للبائع أو المدير فقط)",
        "x-screen": "shipping_management_screen",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "معرف المعاملة"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "provider",
                  "trackingNumber"
                ],
                "properties": {
                  "provider": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 50,
                    "description": "مزود الشحن"
                  },
                  "trackingNumber": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 100,
                    "description": "رقم التتبع"
                  },
                  "trackingUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "رابط التتبع"
                  },
                  "estimatedDelivery": {
                    "type": "string",
                    "format": "date-time",
                    "description": "تاريخ التسليم المتوقع"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "shipped",
                      "in_transit",
                      "delivered",
                      "returned"
                    ],
                    "default": "shipped",
                    "description": "حالة الشحن"
                  }
                }
              },
              "example": {
                "provider": "aramex",
                "trackingNumber": "ARX123456789",
                "trackingUrl": "https://www.aramex.com/track/results?ShipmentNumber=ARX123456789",
                "estimatedDelivery": "2024-02-15T12:00:00Z",
                "status": "shipped"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تحديث معلومات التتبع بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم تحديث معلومات التتبع بنجاح"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ShippingDetails"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "غير مصرح لك بتعديل معلومات التتبع"
          },
          "404": {
            "description": "المعاملة غير موجودة"
          }
        }
      }
    },
    "/transactions/{transactionId}/refund": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "طلب استرداد",
        "description": "تقديم طلب استرداد كامل أو جزئي للمعاملة (للمشتري فقط)",
        "x-screen": "refund_request_screen",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "معرف المعاملة"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "reason"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "minimum": 0.01,
                    "description": "مبلغ الاسترداد (للاسترداد الجزئي)"
                  },
                  "reason": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 500,
                    "description": "سبب طلب الاسترداد"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "full",
                      "partial"
                    ],
                    "default": "full",
                    "description": "نوع الاسترداد"
                  }
                }
              },
              "examples": {
                "full_refund": {
                  "summary": "استرداد كامل",
                  "value": {
                    "reason": "العمل الفني لا يطابق الوصف المذكور في الإعلان",
                    "type": "full"
                  }
                },
                "partial_refund": {
                  "summary": "استرداد جزئي",
                  "value": {
                    "amount": 150,
                    "reason": "العمل الفني به عيب بسيط لكنه قابل للاستخدام",
                    "type": "partial"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تقديم طلب الاسترداد بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم تقديم طلب الاسترداد بنجاح"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "requested": {
                          "type": "boolean"
                        },
                        "requestedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "requestedBy": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "number"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "approved",
                            "rejected",
                            "processed"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "لا يمكن طلب الاسترداد لهذه المعاملة"
          },
          "403": {
            "description": "غير مصرح لك بطلب استرداد لهذه المعاملة"
          },
          "404": {
            "description": "المعاملة غير موجودة"
          }
        }
      }
    },
    "/transactions/{transactionId}/dispute": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "فتح نزاع",
        "description": "فتح نزاع للمعاملة (للمشتري أو البائع)",
        "x-screen": "dispute_screen",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "معرف المعاملة"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "reason",
                  "description"
                ],
                "properties": {
                  "reason": {
                    "type": "string",
                    "enum": [
                      "not_received",
                      "not_as_described",
                      "damaged",
                      "unauthorized",
                      "other"
                    ],
                    "description": "سبب النزاع"
                  },
                  "description": {
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 1000,
                    "description": "وصف مفصل للمشكلة"
                  },
                  "evidence": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    },
                    "maxItems": 10,
                    "description": "روابط الأدلة (صور، مستندات)"
                  }
                }
              },
              "example": {
                "reason": "not_as_described",
                "description": "العمل الفني المستلم يختلف تماماً عن الصور المعروضة في الإعلان. الألوان مختلفة والحجم أصغر من المذكور.",
                "evidence": [
                  "https://example.com/evidence1.jpg",
                  "https://example.com/evidence2.jpg"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم فتح النزاع بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم فتح النزاع بنجاح"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean"
                        },
                        "openedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "openedBy": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "open",
                            "investigating",
                            "resolved",
                            "closed"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "لا يمكن فتح نزاع لهذه المعاملة"
          },
          "403": {
            "description": "غير مصرح لك بفتح نزاع لهذه المعاملة"
          },
          "404": {
            "description": "المعاملة غير موجودة"
          }
        }
      }
    },
    "/transactions/{transactionId}/installments/{installmentNumber}": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "دفع قسط",
        "description": "دفع قسط محدد من أقساط المعاملة (للمشتري فقط)",
        "x-screen": "installment_payment_screen",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "معرف المعاملة"
          },
          {
            "name": "installmentNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "رقم القسط"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "paymentMethod"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "minimum": 0.01,
                    "description": "مبلغ القسط (اختياري، سيتم استخدام المبلغ المحدد مسبقاً)"
                  },
                  "paymentMethod": {
                    "type": "string",
                    "enum": [
                      "credit_card",
                      "debit_card",
                      "bank_transfer",
                      "paypal",
                      "stripe",
                      "apple_pay",
                      "google_pay",
                      "mada",
                      "stc_pay",
                      "other"
                    ],
                    "description": "طريقة الدفع"
                  },
                  "paymentId": {
                    "type": "string",
                    "maxLength": 100,
                    "description": "معرف عملية الدفع من مزود الخدمة"
                  }
                }
              },
              "example": {
                "paymentMethod": "credit_card",
                "paymentId": "pi_1234567890abcdef"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم دفع القسط بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم دفع القسط بنجاح"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "installment": {
                          "type": "object",
                          "properties": {
                            "installmentNumber": {
                              "type": "integer"
                            },
                            "amount": {
                              "type": "number"
                            },
                            "dueDate": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "paidAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "pending",
                                "paid",
                                "overdue",
                                "failed"
                              ]
                            }
                          }
                        },
                        "installmentProgress": {
                          "type": "object",
                          "properties": {
                            "percentage": {
                              "type": "number"
                            },
                            "remaining": {
                              "type": "integer"
                            },
                            "nextAmount": {
                              "type": "number"
                            }
                          }
                        },
                        "transactionStatus": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "القسط مدفوع مسبقاً أو المعاملة لا تستخدم التقسيط"
          },
          "403": {
            "description": "غير مصرح لك بدفع أقساط هذه المعاملة"
          },
          "404": {
            "description": "المعاملة أو القسط غير موجود"
          }
        }
      }
    },
    "/transactions/{transactionId}/cancel": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "إلغاء معاملة",
        "description": "إلغاء معاملة في حالة الانتظار أو المعالجة (للمشتري أو المدير)",
        "x-screen": "cancel_transaction_screen",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "معرف المعاملة"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "maxLength": 500,
                    "description": "سبب الإلغاء"
                  }
                }
              },
              "example": {
                "reason": "تغيير في الخطط، لم أعد بحاجة للعمل الفني"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم إلغاء المعاملة بنجاح",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم إلغاء المعاملة بنجاح"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Transaction"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "لا يمكن إلغاء المعاملة في حالتها الحالية"
          },
          "403": {
            "description": "غير مصرح لك بإلغاء هذه المعاملة"
          },
          "404": {
            "description": "المعاملة غير موجودة"
          }
        }
      }
    },
    "/user/profile": {
      "get": {
        "summary": "Get current user profile",
        "tags": [
          "Profile"
        ],
        "description": "Get the authenticated user's profile with statistics",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم جلب الملف الشخصي بنجاح"
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserProfile"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "put": {
        "summary": "Update user profile",
        "tags": [
          "Profile"
        ],
        "description": "Update the authenticated user's profile information",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم تحديث الملف الشخصي بنجاح"
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/user/change-password": {
      "put": {
        "summary": "Change user password",
        "tags": [
          "Profile"
        ],
        "description": "Change the authenticated user's password",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم تغيير كلمة المرور بنجاح"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/user/wishlist": {
      "get": {
        "summary": "Get user wishlist",
        "tags": [
          "Profile"
        ],
        "description": "Get the authenticated user's wishlist with pagination",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            },
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Wishlist retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم جلب قائمة المفضلة بنجاح"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "wishlist": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/WishlistItem"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/PaginationResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/user/wishlist/toggle": {
      "post": {
        "summary": "Toggle artwork in wishlist",
        "tags": [
          "Profile"
        ],
        "description": "Add or remove an artwork from the user's wishlist",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "artworkId"
                ],
                "properties": {
                  "artworkId": {
                    "type": "string",
                    "pattern": "^[0-9a-fA-F]{24}$",
                    "example": "60d0fe4f5311236168a109ca"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Wishlist updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم إضافة العمل إلى المفضلة"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "type": "string",
                          "enum": [
                            "added",
                            "removed"
                          ],
                          "example": "added"
                        },
                        "wishlistCount": {
                          "type": "integer",
                          "example": 5
                        },
                        "isInWishlist": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Artwork not found"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/user/artist/{artistId}": {
      "get": {
        "summary": "Get artist profile",
        "tags": [
          "Profile"
        ],
        "description": "Get public artist profile with statistics and recent artworks",
        "parameters": [
          {
            "in": "path",
            "name": "artistId",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{24}$"
            },
            "description": "Artist ID",
            "example": "60d0fe4f5311236168a109ca"
          }
        ],
        "responses": {
          "200": {
            "description": "Artist profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم جلب بيانات الفنان بنجاح"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ArtistProfile"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Artist not found"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/user/my-artworks": {
      "get": {
        "summary": "Get user's own artworks",
        "tags": [
          "Profile"
        ],
        "description": "Get artworks created by the authenticated artist",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            },
            "description": "Items per page"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "available",
                "sold"
              ]
            },
            "description": "Filter by availability status"
          }
        ],
        "responses": {
          "200": {
            "description": "Artworks retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم جلب أعمالك الفنية بنجاح"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "artworks": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ArtworkSummary"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/PaginationResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/user/following": {
      "get": {
        "summary": "Get following artists",
        "tags": [
          "Profile"
        ],
        "description": "Get list of artists that the user is following",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            },
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Following list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم جلب قائمة المتابعين بنجاح"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "following": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ArtistSummary"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/PaginationResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/user/notification-settings": {
      "get": {
        "summary": "Get notification settings",
        "tags": [
          "Profile"
        ],
        "description": "Get the authenticated user's notification settings",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Notification settings retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم جلب إعدادات الإشعارات بنجاح"
                    },
                    "data": {
                      "$ref": "#/components/schemas/NotificationSettings"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "put": {
        "summary": "Update notification settings",
        "tags": [
          "Profile"
        ],
        "description": "Update the authenticated user's notification settings",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notification settings updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم تحديث إعدادات الإشعارات بنجاح"
                    },
                    "data": {
                      "$ref": "#/components/schemas/NotificationSettings"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/user/delete-account": {
      "delete": {
        "summary": "Delete user account",
        "tags": [
          "Profile"
        ],
        "description": "Permanently delete user account (soft delete)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "password"
                ],
                "properties": {
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "userPassword123!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "تم حذف الحساب بنجاح"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    }
  }
}